{"version":3,"sources":["../../../src/components/Panel/Panel.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport type { SizeTypeValues } from '../../lib/adaptivity';\nimport type { NavIdProps } from '../../lib/getNavId';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { AppRootContext } from '../AppRoot/AppRootContext';\nimport { NavPanelIdContext } from '../NavIdContext/NavIdContext';\nimport { OnboardingTooltipContainer } from '../OnboardingTooltip/OnboardingTooltipContainer';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Touch } from '../Touch/Touch';\nimport styles from './Panel.module.css';\n\nconst sizeXClassNames = {\n  none: styles['Panel--sizeX-none'],\n  ['compact']: styles['Panel--sizeX-compact'],\n  ['regular']: styles['Panel--sizeX-regular'],\n};\n\nconst stylesMode = {\n  none: styles['Panel--mode-none'],\n  plain: styles['Panel--mode-plain'],\n  card: styles['Panel--mode-card'],\n};\n\nexport interface PanelProps extends HTMLAttributesWithRootRef<HTMLDivElement>, NavIdProps {\n  centered?: boolean;\n  /**\n   * Тип оформления панели.\n   *\n   * Позволяет переопределить тип оформления панели,\n   * заданный через адаптивность или свойство layout у [AppRoot](https://vkcom.github.io/VKUI/#/AppRoot),\n   * глобально задающим тип оформления макета.\n   *\n   * Если установлен `card` - Panel имеет фон отличный от фона контента.\n   * Позволяет компоненту [Group](https://vkcom.github.io/VKUI/#/Group) со свойством mode='card' точечно выглядеть как карточка.\n   * Тип `plain` — соответствует фону по умолчанию.\n   */\n  mode?: 'plain' | 'card';\n  /**\n   * Отключает задний фон\n   */\n  disableBackground?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Panel\n */\nexport const Panel = ({\n  centered = false,\n  children,\n  nav,\n  mode: modeProp,\n  disableBackground,\n  ...restProps\n}: PanelProps): React.ReactNode => {\n  const { sizeX = 'none' } = useAdaptivity();\n\n  const mode = usePanelMode(modeProp, sizeX);\n\n  return (\n    <NavPanelIdContext.Provider value={restProps.id || nav}>\n      <RootComponent\n        {...restProps}\n        baseClassName={classNames(\n          styles['Panel'],\n          sizeXClassNames[sizeX],\n          centered && 'vkuiInternalPanel--centered',\n          disableBackground && styles['Panel--disableBackground'],\n          stylesMode[mode],\n        )}\n      >\n        <Touch\n          Component={OnboardingTooltipContainer}\n          className={classNames(styles['Panel__in'], 'vkuiInternalPanel__in')}\n        >\n          <div className={styles['Panel__in-before']} />\n          {centered ? <div className={styles['Panel__centered']}>{children}</div> : children}\n          <div className={styles['Panel__in-after']} />\n        </Touch>\n      </RootComponent>\n    </NavPanelIdContext.Provider>\n  );\n};\n\nfunction usePanelMode(\n  modeProp: PanelProps['mode'],\n  sizeX: SizeTypeValues | 'none',\n): 'plain' | 'card' | 'none' {\n  const { layout } = React.useContext(AppRootContext);\n\n  if (modeProp) {\n    return modeProp;\n  }\n\n  if (layout) {\n    return layout;\n  }\n\n  if (sizeX !== 'none') {\n    return sizeX === 'regular' ? 'card' : 'plain';\n  }\n\n  return 'none';\n}\n"],"names":["React","classNames","useAdaptivity","AppRootContext","NavPanelIdContext","OnboardingTooltipContainer","RootComponent","Touch","sizeXClassNames","none","stylesMode","plain","card","Panel","centered","children","nav","mode","modeProp","disableBackground","restProps","sizeX","usePanelMode","Provider","value","id","baseClassName","Component","className","div","layout","useContext"],"mappings":";;;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,4BAA4B;AAI1D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,0BAA0B,QAAQ,kDAAkD;AAC7F,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,KAAK,QAAQ,iBAAiB;AAGvC,MAAMC,kBAAkB;IACtBC,IAAI;IACJ,CAAC,UAAU;IACX,CAAC,UAAU;AACb;AAEA,MAAMC,aAAa;IACjBD,IAAI;IACJE,KAAK;IACLC,IAAI;AACN;AAsBA;;CAEC,GACD,OAAO,MAAMC,QAAQ;QAAC,EACpBC,WAAW,KAAK,EAChBC,QAAQ,EACRC,GAAG,EACHC,MAAMC,QAAQ,EACdC,iBAAiB,EAEN,WADRC;QALHN;QACAC;QACAC;QACAC;QACAE;;IAGA,MAAM,EAAEE,QAAQ,MAAM,EAAE,GAAGnB;IAE3B,MAAMe,OAAOK,aAAaJ,UAAUG;IAEpC,qBACE,KAACjB,kBAAkBmB,QAAQ;QAACC,OAAOJ,UAAUK,EAAE,IAAIT;kBACjD,cAAA,KAACV,uDACKc;YACJM,eAAezB,wBAEbO,eAAe,CAACa,MAAM,EACtBP,YAAY,+BACZK,qDACAT,UAAU,CAACO,KAAK;sBAGlB,cAAA,MAACV;gBACCoB,WAAWtB;gBACXuB,WAAW3B,4BAAgC;;kCAE3C,KAAC4B;wBAAID,SAAS;;oBACbd,yBAAW,KAACe;wBAAID,SAAS;kCAA8Bb;yBAAkBA;kCAC1E,KAACc;wBAAID,SAAS;;;;;;AAKxB,EAAE;AAEF,SAASN,aACPJ,QAA4B,EAC5BG,KAA8B;IAE9B,MAAM,EAAES,MAAM,EAAE,GAAG9B,MAAM+B,UAAU,CAAC5B;IAEpC,IAAIe,UAAU;QACZ,OAAOA;IACT;IAEA,IAAIY,QAAQ;QACV,OAAOA;IACT;IAEA,IAAIT,UAAU,QAAQ;QACpB,OAAOA,UAAU,YAAY,SAAS;IACxC;IAEA,OAAO;AACT"}