{"version":3,"sources":["../../../src/components/ModalRoot/ModalRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { type DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { rubber } from '../../lib/touch';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ConfigProviderContext } from '../ConfigProvider/ConfigProviderContext';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { type CustomTouchEvent, Touch } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { ModalRootContext, type ModalRootContextInterface } from './ModalRootContext';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport type { ModalRootWithDOMProps, ModalsStateEntry, TranslateRange } from './types';\nimport { type ModalTransitionProps, withModalManager } from './useModalManager';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return clamp(number, 0, 98);\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n  modalOpenedLog: string[];\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootWithDOMProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootWithDOMProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n      modalOpenedLog: [],\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.props.getModalState(id) ?? {}, data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === 'ios' ? 400 : 320;\n  }\n\n  get document(): Document {\n    return this.props.document as Document;\n  }\n\n  get window(): Window {\n    return this.props.window as Window;\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport\n    this.window?.addEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window.removeEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentDidUpdate(prevProps: ModalRootWithDOMProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n      const enteringState = this.props.getModalState(this.props.enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState) {\n          if (enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = '';\n          }\n          this.onEntered(enteringState);\n        }\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : '';\n        this.animateTranslate(enteringState, enteringState.translateY);\n        this.setMaskOpacity(enteringState, 1);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document.activeElement as HTMLElement;\n    }\n    if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (enabled) {\n      // восстанавливаем значение overscroll behavior\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n    } else {\n      // отключаем нативный pull-to-refresh при открытом модальном окне\n      // чтобы он не срабатывал при закрытии модалки смахиванием вниз\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n    }\n  }\n\n  checkPageContentHeight() {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page' && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState && modalState.type === 'page') {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  onEntered({ id, modalElement }: ModalsStateEntry) {\n    if (\n      !this.props.noFocusToDialog &&\n      modalElement &&\n      !modalElement.contains(this.document.activeElement)\n    ) {\n      modalElement.focus();\n    }\n\n    this.props.onEntered(id);\n  }\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.props.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`closeActiveModal: модальное окно (страница) ${id} не существует`, 'error');\n      return;\n    }\n    if (!this.state.modalOpenedLog.length) {\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, id],\n      }));\n    }\n    const nextModalState = this.props.getModalState(this.props.activeModal);\n    const nextIsPage = !!nextModalState && nextModalState.type === 'page';\n\n    const prevIsPage = !!prevModalState && prevModalState.type === 'page';\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <= (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n      this.setState({ modalOpenedLog: [] });\n      prevModalState.translateY = undefined;\n      prevModalState.expandable = undefined;\n    } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {\n      nextModalState.translateY = undefined;\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, nextModalState.id!],\n      }));\n    }\n  }\n\n  onTouchMove = (e: CustomTouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === 'page') {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === 'card') {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop = modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate((modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, (modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: CustomTouchEvent) => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page') {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === 'card') {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent = ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = modalState.preventClose ? modalState.translateYFrom ?? 0 : 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = modalState.preventClose ? modalState.translateYFrom ?? 0 : 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75 && !modalState.preventClose) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = numberInRange(translateY, modalState.collapsedRange);\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onCardTouchEnd({ duration }: CustomTouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) * 240 * 0.6 * ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(activeModal);\n    if (modalState?.type === 'page' && modalState?.contentElement?.contains(target)) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry | undefined, eventHandler: () => void) {\n    const el = modalState ? modalState.innerElement : null;\n    if (el) {\n      el.addEventListener('transitionend', eventHandler, { once: true });\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      if (!modalState.innerElement) {\n        return;\n      }\n      modalState.innerElement.style.transform = `translate3d(0, ${percent}%, 0)`;\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number | null = null) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n        this.maskElementRef.current.style.transitionDelay =\n          opacity && this.props.delayEnter ? `${this.timeout}ms` : '';\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal, modalOverlayTestId } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            className={classNames(\n              styles['ModalRoot'],\n              this.props.configProvider?.hasCustomPanelHeaderAfter &&\n                styles['ModalRoot--hasCustomPanelHeaderAfterSlot'],\n              touchDown &&\n                classNames(styles['ModalRoot--touched'], 'vkuiInternalModalRoot--touched'),\n              !!(enteringModal || exitingModal) &&\n                classNames(styles['ModalRoot--switching'], 'vkuiInternalModalRoot--switching'),\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              data-testid={modalOverlayTestId}\n              className={styles['ModalRoot__mask']}\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div className={styles['ModalRoot__viewport']} ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.props.getModalState(modalId);\n                if ((modalId !== activeModal && modalId !== exitingModal) || !_modalState) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === 'page';\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    className={classNames(\n                      styles['ModalRoot__modal'],\n\n                      dragging && 'vkuiInternalModalRoot__modal--dragging',\n\n                      isPage && modalState.expandable && 'vkuiInternalModalRoot__modal--expandable',\n                      isPage && modalState.collapsed && 'vkuiInternalModalRoot__modal--collapsed',\n                    )}\n                    autoFocus={false}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch: React.FC<ModalRootWithDOMProps> = withContext(\n  withPlatform(\n    withDOM<ModalRootWithDOMProps>(withModalManager(initModal)(ModalRootTouchComponent)),\n  ),\n  ConfigProviderContext,\n  'configProvider',\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case 'page':\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case 'card':\n      return initCardModal(modalState);\n    default:\n      process.env.NODE_ENV === 'development' &&\n        warn(`initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`, 'error');\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement, bottomInset } = modalState;\n  const contentElementHeight = calculateModalContentHeight(\n    contentElement?.firstElementChild as HTMLElement,\n    modalState.expandable,\n  );\n  const bottomInsetHeight = bottomInset?.offsetHeight || 0;\n  const contentHeight = contentElementHeight + bottomInsetHeight;\n  let prevTranslateY = modalState.translateY;\n  let prevExpandable = modalState.expandable;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) || modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange | undefined;\n  let hiddenRange: TranslateRange;\n\n  const hasCollapsedState = Boolean(modalState.expandable && modalState.settlingHeight !== 100);\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = hasCollapsedState ? [shiftHalf, translateYFrom + visiblePart / 4] : undefined;\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = hasCollapsedState && translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 - (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) * 100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = undefined;\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Свойство expandable может измениться из-за высоты контента, в таком случае на всю высоту не разворачиваем\n  const shouldExpand = prevExpandable && modalState.expandable;\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if ((shouldExpand && translateY > (prevTranslateY ?? 100)) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n\nfunction calculateModalContentHeight(\n  element: HTMLElement,\n  isExpandable: ModalsStateEntry['expandable'],\n) {\n  if (!isExpandable) {\n    return element.scrollHeight;\n  }\n\n  /*\n   * В режиме expandable мы назначаем контейнеру контента высоту 100%, что не даёт\n   * получить реальную высоту контента.\n   * Поэтому мы пересчитываем высоту, временно устанавливая height: auto;\n   * */\n  const currentHeightStyle = element.style.height;\n  element.style.height = 'auto';\n\n  const elementHeight = element.scrollHeight;\n  element.style.height = currentHeightStyle;\n\n  return elementHeight;\n}\n"],"names":["React","classNames","clamp","withContext","withPlatform","withDOM","getNavId","rubber","warnOnce","ConfigProviderContext","FocusTrap","Touch","TouchRootContext","ModalRootContext","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","withModalManager","warn","numberInRange","number","range","rangeTranslate","ModalRootTouchComponent","Component","timeout","props","platform","document","window","getModals","Children","toArray","children","componentDidMount","addEventListener","updateModalHeight","componentWillUnmount","toggleDocumentScrolling","removeEventListener","componentDidUpdate","prevProps","exitingModal","closeModal","enteringModal","enteringState","getModalState","onEnter","waitTransitionFinish","innerElement","style","transitionDelay","onEntered","delayEnter","animateTranslate","translateY","setMaskOpacity","activeModal","restoreFocusTo","activeElement","focus","enabled","documentElement","classList","remove","add","checkPageContentHeight","modalState","type","modalElement","prevModalState","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","id","noFocusToDialog","contains","setState","touchDown","state","modalOpenedLog","length","prevState","nextModalState","nextIsPage","prevIsPage","onExited","exitTranslate","isBack","undefined","includes","onPageTouchMove","event","shiftY","originalEvent","target","isY","viewportRef","current","preventDefault","stopPropagation","contentScrolled","collapsed","expanded","touchStartContentScrollTop","contentElement","scrollTop","touchMovePositive","headerElement","dragging","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","translateYCurrent","onCardTouchMove","offsetHeight","Math","max","onPageTouchEnd","startY","setStateCallback","shiftYEndPercent","expectTranslateY","duration","settlingHeight","expandedRange","collapsedRange","hiddenRange","preventClose","hidden","onExit","onCardTouchEnd","eventHandler","el","once","setTimeout","percent","frameId","cancelAnimationFrame","frameIds","requestAnimationFrame","transform","forceOpacity","history","maskAnimationFrame","maskElementRef","opacity","toString","render","modalOverlayTestId","Provider","value","modalRootContext","className","configProvider","hasCustomPanelHeaderAfter","onMove","onTouchMove","onEnd","onTouchEnd","onScroll","div","data-testid","onClick","ref","map","Modal","modalId","_modalState","isPage","key","onClose","autoFocus","restoreFocus","constructor","createRef","e","contentScrollStopTimeout","clearTimeout","registerModal","data","Object","assign","isInsideModal","ModalRootTouch","initModal","initCardModal","process","env","NODE_ENV","bottomInset","contentElementHeight","calculateModalContentHeight","firstElementChild","bottomInsetHeight","contentHeight","prevTranslateY","prevExpandable","clientHeight","hasCollapsedState","Boolean","shiftHalf","visiblePart","headerHeight","height","parentElement","shouldExpand","element","isExpandable","scrollHeight","currentHeightStyle","elementHeight"],"mappings":"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"}