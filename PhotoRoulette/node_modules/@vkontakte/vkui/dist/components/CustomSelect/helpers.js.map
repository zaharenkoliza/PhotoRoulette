{"version":3,"sources":["../../../src/components/CustomSelect/helpers.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getTextFromChildren } from '../../lib/children';\nimport { CustomSelectOption } from '../CustomSelectOption/CustomSelectOption';\nimport type { CustomSelectOptionInterface, CustomSelectRenderOption, SelectValue } from './types';\n\nexport const findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nexport const findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nexport function findSelectedIndex<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nexport function calculateInputValueFromOptions<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  selectValue: SelectValue,\n) {\n  const selectedOption = options.find((option) => option.value === selectValue);\n  return selectedOption ? getTextFromChildren(selectedOption.label) : '';\n}\n\nexport function defaultRenderOptionFn<T extends CustomSelectOptionInterface>({\n  option,\n  ...props\n}: CustomSelectRenderOption<T>): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n"],"names":["React","getTextFromChildren","CustomSelectOption","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","findSelectedIndex","value","withClear","item","Number","calculateInputValueFromOptions","selectValue","selectedOption","find","label","defaultRenderOptionFn","props"],"mappings":";;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,kBAAkB,QAAQ,2CAA2C;AAG9E,OAAO,MAAMC,iBAAiB,CAACC,UAAyC,EAAE,EAAEC,aAAa,CAAC,CAAC;IACzF,IAAIA,cAAcD,QAAQE,MAAM,GAAG,GAAG;QACpC,OAAO,CAAC;IACV;IACA,OAAOF,QAAQG,SAAS,CAAC,CAACC,QAAQC,IAAMA,IAAIJ,cAAc,CAACG,OAAOE,QAAQ;AAC5E,EAAE;AAEF,OAAO,MAAMC,kBAAkB,CAC7BP,UAAyC,EAAE,EAC3CQ,WAAmBR,QAAQE,MAAM;IAEjC,IAAIO,SAAS,CAAC;IACd,IAAID,YAAY,GAAG;QACjB,OAAOC;IACT;IACA,IAAK,IAAIJ,IAAIG,WAAW,GAAGH,KAAK,GAAGA,IAAK;QACtC,IAAID,SAASJ,OAAO,CAACK,EAAE;QAEvB,IAAI,CAACD,OAAOE,QAAQ,EAAE;YACpBG,SAASJ;YACT;QACF;IACF;IACA,OAAOI;AACT,EAAE;AAEF,OAAO,SAASC,kBACdV,UAAe,EAAE,EACjBW,KAAkB,EAClBC,SAAkB;IAElB,IAAIA,aAAaD,UAAU,IAAI;QAC7B,OAAO,CAAC;IACV;QAEEX;IADF,OACEA,CAAAA,qBAAAA,QAAQG,SAAS,CAAC,CAACU;QACjBF,QAAQ,OAAOE,KAAKF,KAAK,KAAK,WAAWG,OAAOH,SAASA;QACzD,OAAOE,KAAKF,KAAK,KAAKA;IACxB,gBAHAX,gCAAAA,qBAGM,CAAC;AAEX;AAEA,OAAO,SAASe,+BACdf,UAAe,EAAE,EACjBgB,WAAwB;IAExB,MAAMC,iBAAiBjB,QAAQkB,IAAI,CAAC,CAACd,SAAWA,OAAOO,KAAK,KAAKK;IACjE,OAAOC,iBAAiBpB,oBAAoBoB,eAAeE,KAAK,IAAI;AACtE;AAEA,OAAO,SAASC,sBAA6D;QAAA,EAC3EhB,MAAM,EAEsB,GAH+C,QAExEiB,mCAFwE;QAC3EjB;;IAGA,qBAAO,KAACN,uCAAuBuB;AACjC"}