{"version":3,"sources":["../../../src/components/ScreenSpinner/ScreenSpinnerSwapIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport { mergeCalls } from '../../lib/mergeCalls';\nimport { clickByKeyboardHandler } from '../../lib/utils';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Icon48CancelCircle } from './Icon48CancelCircle';\nimport { Icon48DoneOutline } from './Icon48DoneOutline';\nimport { ScreenSpinnerContext } from './context';\nimport { type ScreenSpinnerProps } from './types';\nimport styles from './ScreenSpinner.module.css';\n\ntype ScreenSpinnerSwapIconProps = HTMLAttributesWithRootRef<HTMLElement> & {\n  cancelLabel?: ScreenSpinnerProps['cancelLabel'];\n};\n\nconst ScreenSpinnerCancelIcon: React.FC<ScreenSpinnerSwapIconProps> = ({\n  onKeyDown,\n  'aria-label': ariaLabel = 'Отменить',\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const handlers = mergeCalls(\n    { onKeyDown: clickByKeyboardHandler },\n    {\n      onKeyDown,\n    },\n  );\n  let clickableProps: React.HTMLAttributes<HTMLSpanElement> = {\n    ...handlers,\n    'tabIndex': 0,\n    'role': 'button',\n    'aria-label': ariaLabel,\n  };\n\n  return (\n    <RootComponent baseClassName={styles['ScreenSpinner__icon']} {...clickableProps} {...restProps}>\n      <Icon24Cancel />\n    </RootComponent>\n  );\n};\n\nScreenSpinnerCancelIcon.displayName = 'ScreenSpinnerCancelIcon';\n\nexport const ScreenSpinnerSwapIcon: React.FC<ScreenSpinnerSwapIconProps> = ({\n  cancelLabel,\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const { state } = React.useContext(ScreenSpinnerContext);\n\n  if (state === 'cancelable') {\n    return <ScreenSpinnerCancelIcon aria-label={cancelLabel} {...restProps} />;\n  }\n\n  const Icon = {\n    loading: () => null,\n    done: Icon48DoneOutline,\n    error: Icon48CancelCircle,\n  }[state];\n\n  return (\n    <RootComponent baseClassName={styles['ScreenSpinner__icon']} {...restProps}>\n      <Icon />\n    </RootComponent>\n  );\n};\n\nScreenSpinnerSwapIcon.displayName = 'ScreenSpinnerSwapIcon';\n"],"names":["React","Icon24Cancel","mergeCalls","clickByKeyboardHandler","RootComponent","Icon48CancelCircle","Icon48DoneOutline","ScreenSpinnerContext","ScreenSpinnerCancelIcon","onKeyDown","ariaLabel","restProps","handlers","clickableProps","baseClassName","displayName","ScreenSpinnerSwapIcon","cancelLabel","state","useContext","aria-label","Icon","loading","done","error"],"mappings":";;;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,sBAAsB,QAAQ,kBAAkB;AAEzD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,oBAAoB,QAAQ,YAAY;AAQjD,MAAMC,0BAAgE;QAAC,EACrEC,SAAS,EACT,cAAcC,YAAY,UAAU,EAET,WADxBC;QAFHF;QACA;;IAGA,MAAMG,WAAWV,WACf;QAAEO,WAAWN;IAAuB,GACpC;QACEM;IACF;IAEF,IAAII,iBAAwD,wCACvDD;QACH,YAAY;QACZ,QAAQ;QACR,cAAcF;;IAGhB,qBACE,KAACN;QAAcU,aAAa;OAAqCD,gBAAoBF;kBACnF,cAAA,KAACV;;AAGP;AAEAO,wBAAwBO,WAAW,GAAG;AAEtC,OAAO,MAAMC,wBAA8D;QAAC,EAC1EC,WAAW,EAEgB,WADxBN;QADHM;;IAGA,MAAM,EAAEC,KAAK,EAAE,GAAGlB,MAAMmB,UAAU,CAACZ;IAEnC,IAAIW,UAAU,cAAc;QAC1B,qBAAO,KAACV;YAAwBY,cAAYH;WAAiBN;IAC/D;IAEA,MAAMU,OAAO;QACXC,SAAS,IAAM;QACfC,MAAMjB;QACNkB,OAAOnB;IACT,CAAC,CAACa,MAAM;IAER,qBACE,KAACd;QAAcU,aAAa;OAAqCH;kBAC/D,cAAA,KAACU;;AAGP,EAAE;AAEFL,sBAAsBD,WAAW,GAAG"}