{"version":3,"sources":["../../../src/components/Flex/Flex.tsx"],"sourcesContent":["import { Children } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport {\n  calculateGap,\n  columnGapClassNames,\n  type GapProp,\n  type GapsProp,\n  rowGapClassNames,\n} from '../../lib/layouts';\nimport type { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { FlexItem, type FlexItemProps } from './FlexItem/FlexItem';\nimport styles from './Flex.module.css';\n\nexport type { FlexItemProps };\n\nconst justifyClassNames = {\n  'start': styles['Flex--justify-start'],\n  'end': styles['Flex--justify-end'],\n  'center': styles['Flex--justify-center'],\n  'space-around': styles['Flex--justify-space-around'],\n  'space-between': styles['Flex--justify-space-between'],\n  'space-evenly': styles['Flex--justify-space-evenly'],\n};\n\nconst alignClassNames = {\n  start: styles['Flex--align-start'],\n  end: styles['Flex--align-end'],\n  center: styles['Flex--align-center'],\n  stretch: styles['Flex--align-stretch'],\n  baseline: styles['Flex--align-baseline'],\n};\n\ntype FlexContentProps =\n  | 'start'\n  | 'end'\n  | 'center'\n  | 'space-around'\n  | 'space-between'\n  | 'space-evenly';\n\nexport interface FlexProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Направление осей, эквивалентно `flex-direction`.\n   */\n  direction?: 'row' | 'column';\n  /**\n   * Отступы между элементами.\n   * Значение из списка предопределённых пресетов или число, которое будет приведено к пикселям.\n   * Через массив можно задать отступ между столбцами и строками [column, row], если они отличаются.\n   *\n   * TODO [>=7]: порядок следования будет [row, column]\n   */\n  gap?: GapsProp;\n  /**\n   * Отключает перенос контента, эквивалентно `flex-wrap=nowrap`.\n   */\n  noWrap?: boolean;\n  /**\n   * Выравнивание элементов по вспомогательной оси, эквивалентно `align-items`.\n   */\n  align?: 'start' | 'end' | 'center' | 'stretch' | 'baseline';\n  /**\n   * Выравнивание элементов по главной оси, эквивалентно `justify-content`.\n   */\n  justify?: FlexContentProps;\n  /**\n   * Значение `auto` позволяет задать платформенные отступы вокруг контейнера.\n   */\n  margin?: 'none' | 'auto';\n  /**\n   * Для инвертирования направления, эквивалентно `row-reverse` `column-reverse`.\n   */\n  reverse?: boolean;\n}\n\nexport const Flex: React.FC<FlexProps> & {\n  Item: typeof FlexItem;\n} = ({\n  gap,\n  align,\n  justify,\n  margin = 'none',\n  noWrap = false,\n  direction = 'row',\n  style: styleProp,\n  reverse = false,\n  children,\n  ...props\n}: FlexProps) => {\n  const withGaps = Children.count(children) > 1 && gap;\n  const [columnGap, rowGap] = calculateGap(withGaps ? gap : undefined);\n\n  return (\n    <RootComponent\n      {...props}\n      baseClassName={classNames(\n        styles.Flex,\n        !noWrap && styles['Flex--wrap'],\n        reverse && styles['Flex--reverse'],\n        direction !== 'row' && styles['Flex--direction-column'],\n        margin !== 'none' && styles['Flex--margin-auto'],\n        align && alignClassNames[align],\n        justify && justifyClassNames[justify],\n        withGaps && styles['Flex--withGaps'],\n        withGaps && getGapsPresets(rowGap, columnGap),\n      )}\n      style={withGaps ? { ...getGapsByUser(rowGap, columnGap), ...styleProp } : styleProp}\n    >\n      {children}\n    </RootComponent>\n  );\n};\n\nfunction getGapsPresets(rowGap?: GapProp, columnGap?: GapProp) {\n  return classNames(\n    typeof rowGap === 'string' && rowGapClassNames[rowGap],\n    typeof columnGap === 'string' && columnGapClassNames[columnGap],\n  );\n}\n\nfunction getGapsByUser(rowGap?: GapProp, columnGap?: GapProp) {\n  const style: CSSCustomProperties = {};\n\n  if (typeof rowGap === 'number') {\n    style['--vkui_internal--row_gap'] = `${rowGap}px`;\n  }\n  if (typeof columnGap === 'number') {\n    style['--vkui_internal--column_gap'] = `${columnGap}px`;\n  }\n\n  return style;\n}\n\nFlex.Item = FlexItem;\n"],"names":["Children","classNames","calculateGap","columnGapClassNames","rowGapClassNames","RootComponent","FlexItem","justifyClassNames","alignClassNames","start","end","center","stretch","baseline","Flex","gap","align","justify","margin","noWrap","direction","style","styleProp","reverse","children","props","withGaps","count","columnGap","rowGap","undefined","baseClassName","getGapsPresets","getGapsByUser","Item"],"mappings":";;;;AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SACEC,YAAY,EACZC,mBAAmB,EAGnBC,gBAAgB,QACX,oBAAoB;AAE3B,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,QAAQ,QAA4B,sBAAsB;AAKnE,MAAMC,oBAAoB;IACxB,OAAO;IACP,KAAK;IACL,QAAQ;IACR,cAAc;IACd,eAAe;IACf,cAAc;AAChB;AAEA,MAAMC,kBAAkB;IACtBC,KAAK;IACLC,GAAG;IACHC,MAAM;IACNC,OAAO;IACPC,QAAQ;AACV;AA6CA,OAAO,MAAMC,OAET;QAAC,EACHC,GAAG,EACHC,KAAK,EACLC,OAAO,EACPC,SAAS,MAAM,EACfC,SAAS,KAAK,EACdC,YAAY,KAAK,EACjBC,OAAOC,SAAS,EAChBC,UAAU,KAAK,EACfC,QAAQ,EAEE,WADPC;QATHV;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAE;QACAC;;IAGA,MAAME,WAAW1B,SAAS2B,KAAK,CAACH,YAAY,KAAKT;IACjD,MAAM,CAACa,WAAWC,OAAO,GAAG3B,aAAawB,WAAWX,MAAMe;IAE1D,qBACE,KAACzB,uDACKoB;QACJM,eAAe9B,uBAEb,CAACkB,4BACDI,gCACAH,cAAc,uCACdF,WAAW,mCACXF,SAASR,eAAe,CAACQ,MAAM,EAC/BC,WAAWV,iBAAiB,CAACU,QAAQ,EACrCS,kCACAA,YAAYM,eAAeH,QAAQD;QAErCP,OAAOK,WAAW,mBAAKO,cAAcJ,QAAQD,YAAeN,aAAcA;kBAEzEE;;AAGP,EAAE;AAEF,SAASQ,eAAeH,MAAgB,EAAED,SAAmB;IAC3D,OAAO3B,WACL,OAAO4B,WAAW,YAAYzB,gBAAgB,CAACyB,OAAO,EACtD,OAAOD,cAAc,YAAYzB,mBAAmB,CAACyB,UAAU;AAEnE;AAEA,SAASK,cAAcJ,MAAgB,EAAED,SAAmB;IAC1D,MAAMP,QAA6B,CAAC;IAEpC,IAAI,OAAOQ,WAAW,UAAU;QAC9BR,KAAK,CAAC,2BAA2B,GAAG,CAAC,EAAEQ,OAAO,EAAE,CAAC;IACnD;IACA,IAAI,OAAOD,cAAc,UAAU;QACjCP,KAAK,CAAC,8BAA8B,GAAG,CAAC,EAAEO,UAAU,EAAE,CAAC;IACzD;IAEA,OAAOP;AACT;AAEAP,KAAKoB,IAAI,GAAG5B"}