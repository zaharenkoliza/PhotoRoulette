{"version":3,"sources":["../../../src/hooks/useResizeObserver.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport type * as React from 'react';\nimport { CustomResizeObserver } from '../lib/floating/customResizeObserver';\nimport { useStableCallback } from './useStableCallback';\n\n/**\n * Хук вызывает переданный коллбэк при изменении размеров элемента.\n */\nexport function useResizeObserver(\n  ref: React.MutableRefObject<HTMLElement | null> | React.RefObject<HTMLElement | null> | null,\n  callback: (element: HTMLElement) => void,\n): void {\n  const stableCallback = useStableCallback(callback);\n\n  useEffect(\n    function addResizeObserverHandler() {\n      /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */\n      if (!ref || !ref.current) {\n        return;\n      }\n      const element = ref.current;\n      const observer = new CustomResizeObserver(() => stableCallback(element));\n      observer.observe(element);\n      observer.appendToTheDOM();\n\n      return () => observer.disconnect();\n    },\n    [ref, stableCallback],\n  );\n}\n"],"names":["useResizeObserver","ref","callback","stableCallback","useStableCallback","useEffect","addResizeObserverHandler","current","element","observer","CustomResizeObserver","observe","appendToTheDOM","disconnect"],"mappings":";;;;+BAQgBA;;;eAAAA;;;uBARU;sCAEW;mCACH;AAK3B,SAASA,kBACdC,GAA4F,EAC5FC,QAAwC;IAExC,MAAMC,iBAAiBC,IAAAA,oCAAiB,EAACF;IAEzCG,IAAAA,gBAAS,EACP,SAASC;QACP,6EAA6E,GAC7E,IAAI,CAACL,OAAO,CAACA,IAAIM,OAAO,EAAE;YACxB;QACF;QACA,MAAMC,UAAUP,IAAIM,OAAO;QAC3B,MAAME,WAAW,IAAIC,0CAAoB,CAAC,IAAMP,eAAeK;QAC/DC,SAASE,OAAO,CAACH;QACjBC,SAASG,cAAc;QAEvB,OAAO,IAAMH,SAASI,UAAU;IAClC,GACA;QAACZ;QAAKE;KAAe;AAEzB"}