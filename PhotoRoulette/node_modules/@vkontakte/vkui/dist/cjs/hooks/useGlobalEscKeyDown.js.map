{"version":3,"sources":["../../../src/hooks/useGlobalEscKeyDown.ts"],"sourcesContent":["import { Keys, pressedKey } from '../lib/accessibility';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nconst EVENT_OPTIONS = {\n  passive: true,\n  capture: true,\n};\n\n/**\n * Завязывается на document.\n *\n * @private\n */\nexport const useGlobalEscKeyDown = (\n  init: boolean,\n  callback?: (event: KeyboardEvent) => void,\n): void => {\n  const { document } = useDOM();\n  useIsomorphicLayoutEffect(() => {\n    if (!document || !init || !callback) {\n      return;\n    }\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (pressedKey(event) === Keys.ESCAPE) {\n        callback(event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown, EVENT_OPTIONS);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, EVENT_OPTIONS);\n    };\n  }, [init, document, callback]);\n};\n"],"names":["useGlobalEscKeyDown","EVENT_OPTIONS","passive","capture","init","callback","document","useDOM","useIsomorphicLayoutEffect","handleKeyDown","event","pressedKey","Keys","ESCAPE","addEventListener","removeEventListener"],"mappings":";;;;+BAcaA;;;eAAAA;;;+BAdoB;qBACV;2CACmB;AAE1C,MAAMC,gBAAgB;IACpBC,SAAS;IACTC,SAAS;AACX;AAOO,MAAMH,sBAAsB,CACjCI,MACAC;IAEA,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,WAAM;IAC3BC,IAAAA,oDAAyB,EAAC;QACxB,IAAI,CAACF,YAAY,CAACF,QAAQ,CAACC,UAAU;YACnC;QACF;QACA,MAAMI,gBAAgB,CAACC;YACrB,IAAIC,IAAAA,yBAAU,EAACD,WAAWE,mBAAI,CAACC,MAAM,EAAE;gBACrCR,SAASK;YACX;QACF;QACAJ,SAASQ,gBAAgB,CAAC,WAAWL,eAAeR;QACpD,OAAO;YACLK,SAASS,mBAAmB,CAAC,WAAWN,eAAeR;QACzD;IACF,GAAG;QAACG;QAAME;QAAUD;KAAS;AAC/B"}