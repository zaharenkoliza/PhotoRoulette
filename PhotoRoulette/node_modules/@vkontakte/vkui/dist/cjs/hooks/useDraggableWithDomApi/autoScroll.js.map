{"version":3,"sources":["../../../../src/hooks/useDraggableWithDomApi/autoScroll.ts"],"sourcesContent":["import { getNodeScroll, getScrollHeight, getScrollRect } from '../../lib/dom';\nimport { rafSchd } from '../../lib/rafSchd';\n\nconst SCROLL_SPEED = 10;\nexport const EDGE_SIZE = 50;\n\nexport const getAutoScrollingData = (\n  clientY: number,\n  scrollEl: Element | Window,\n): {\n  shouldScrolling: boolean;\n  y: number;\n} => {\n  const scrollTop = Math.floor(getNodeScroll(scrollEl).scrollTop);\n\n  const { relative, edges } = getScrollRect(scrollEl);\n  const viewportHeight = relative.height;\n  const documentHeight = getScrollHeight(scrollEl);\n  const maxScrollY = documentHeight - viewportHeight;\n  const canScrollUp = scrollTop > 0;\n  const canScrollDown = scrollTop < maxScrollY;\n\n  const [edgeTop, edgeBottom] = edges.y;\n  const topDistance = clientY - edgeTop;\n  const bottomDistance = edgeBottom - clientY;\n  const isInTopEdge = topDistance <= EDGE_SIZE;\n  const isInBottomEdge = bottomDistance <= EDGE_SIZE;\n\n  const result = {\n    shouldScrolling: (canScrollUp && isInTopEdge) || (canScrollDown && isInBottomEdge),\n    y: 0,\n  };\n\n  // Inspired by https://github.com/SortableJS/Sortable/issues/1907#issuecomment-1495403785\n  if (isInTopEdge) {\n    result.y = -1 * ((EDGE_SIZE - topDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  } else if (isInBottomEdge) {\n    result.y = ((EDGE_SIZE - bottomDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  }\n\n  return result;\n};\n\nexport type AutoScrollingDataFn = () => { shouldScrolling: boolean; y: number };\n\nexport const createAutoScrollController = (\n  scrollEl: Element | Window,\n): {\n  tryAutoScroll: (fn: AutoScrollingDataFn) => void;\n  stop: () => void;\n  readonly isRunning: boolean;\n} => {\n  let isRunning = false;\n  const scheduledScroll = rafSchd(scroll);\n\n  function scroll(fn: AutoScrollingDataFn) {\n    const { shouldScrolling, y } = fn();\n    if (shouldScrolling) {\n      isRunning = true;\n      scrollEl.scrollBy(0, y);\n      scheduledScroll(fn);\n    } else {\n      isRunning = false;\n      scheduledScroll.cancel();\n    }\n  }\n\n  const tryAutoScroll = (fn: AutoScrollingDataFn) => {\n    scheduledScroll(fn);\n  };\n\n  const stop = () => {\n    isRunning = false;\n    scheduledScroll.cancel();\n  };\n\n  return {\n    tryAutoScroll,\n    stop,\n    get isRunning() {\n      return isRunning;\n    },\n  };\n};\n"],"names":["EDGE_SIZE","createAutoScrollController","getAutoScrollingData","SCROLL_SPEED","clientY","scrollEl","scrollTop","Math","floor","getNodeScroll","relative","edges","getScrollRect","viewportHeight","height","documentHeight","getScrollHeight","maxScrollY","canScrollUp","canScrollDown","edgeTop","edgeBottom","y","topDistance","bottomDistance","isInTopEdge","isInBottomEdge","result","shouldScrolling","isRunning","scheduledScroll","rafSchd","scroll","fn","scrollBy","cancel","tryAutoScroll","stop"],"mappings":";;;;;;;;;;;IAIaA,SAAS;eAATA;;IAyCAC,0BAA0B;eAA1BA;;IAvCAC,oBAAoB;eAApBA;;;qBANiD;yBACtC;AAExB,MAAMC,eAAe;AACd,MAAMH,YAAY;AAElB,MAAME,uBAAuB,CAClCE,SACAC;IAKA,MAAMC,YAAYC,KAAKC,KAAK,CAACC,IAAAA,kBAAa,EAACJ,UAAUC,SAAS;IAE9D,MAAM,EAAEI,QAAQ,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAa,EAACP;IAC1C,MAAMQ,iBAAiBH,SAASI,MAAM;IACtC,MAAMC,iBAAiBC,IAAAA,oBAAe,EAACX;IACvC,MAAMY,aAAaF,iBAAiBF;IACpC,MAAMK,cAAcZ,YAAY;IAChC,MAAMa,gBAAgBb,YAAYW;IAElC,MAAM,CAACG,SAASC,WAAW,GAAGV,MAAMW,CAAC;IACrC,MAAMC,cAAcnB,UAAUgB;IAC9B,MAAMI,iBAAiBH,aAAajB;IACpC,MAAMqB,cAAcF,eAAevB;IACnC,MAAM0B,iBAAiBF,kBAAkBxB;IAEzC,MAAM2B,SAAS;QACbC,iBAAiB,AAACV,eAAeO,eAAiBN,iBAAiBO;QACnEJ,GAAG;IACL;IAEA,yFAAyF;IACzF,IAAIG,aAAa;QACfE,OAAOL,CAAC,GAAG,CAAC,IAAK,CAAA,AAACtB,CAAAA,YAAYuB,WAAU,IAAKvB,SAAQ,IAAKG;IAC5D,OAAO,IAAIuB,gBAAgB;QACzBC,OAAOL,CAAC,GAAG,AAAEtB,CAAAA,YAAYwB,cAAa,IAAKxB,YAAaG;IAC1D;IAEA,OAAOwB;AACT;AAIO,MAAM1B,6BAA6B,CACxCI;IAMA,IAAIwB,YAAY;IAChB,MAAMC,kBAAkBC,IAAAA,gBAAO,EAACC;IAEhC,SAASA,OAAOC,EAAuB;QACrC,MAAM,EAAEL,eAAe,EAAEN,CAAC,EAAE,GAAGW;QAC/B,IAAIL,iBAAiB;YACnBC,YAAY;YACZxB,SAAS6B,QAAQ,CAAC,GAAGZ;YACrBQ,gBAAgBG;QAClB,OAAO;YACLJ,YAAY;YACZC,gBAAgBK,MAAM;QACxB;IACF;IAEA,MAAMC,gBAAgB,CAACH;QACrBH,gBAAgBG;IAClB;IAEA,MAAMI,OAAO;QACXR,YAAY;QACZC,gBAAgBK,MAAM;IACxB;IAEA,OAAO;QACLC;QACAC;QACA,IAAIR,aAAY;YACd,OAAOA;QACT;IACF;AACF"}