{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { type DOMProps, initializeBrowserGesturePreventionEffect, useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport type { AnyFunction, HasChildren } from '../../types';\nimport { type ScrollContextInterface, useScroll } from '../AppRoot/ScrollContext';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { type CustomTouchEvent, Touch, type TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport styles from './PullToRefresh.module.css';\n\nconst WAIT_FETCHING_TIMEOUT_MS = 1000;\n\nfunction cancelEvent(event: CustomTouchEvent) {\n  /* istanbul ignore if: неясно в какой ситуации `event` из `Touch` может быть не определён */\n  if (!event) {\n    return false;\n  }\n  if ('preventDefault' in event.originalEvent && event.originalEvent.cancelable) {\n    event.originalEvent.preventDefault();\n  }\n  if ('stopPropagation' in event.originalEvent) {\n    event.originalEvent.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps, HasChildren {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  className,\n  ...restProps\n}: PullToRefreshProps): React.ReactNode => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { window } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === 'ios' ? -10 : -45,\n      max: platform === 'ios' ? 50 : 80,\n      maxY: platform === 'ios' ? 400 : 80,\n      refreshing: platform === 'ios' ? 36 : 50,\n      positionMultiplier: platform === 'ios' ? 0.21 : 1,\n    }),\n    [platform],\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const waitFetchingTimeoutId = React.useRef<NodeJS.Timeout>();\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearTimeout(waitFetchingTimeoutId.current);\n    }\n  }, [isFetching, prevIsFetching]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      clearTimeout(waitFetchingTimeoutId.current);\n      waitFetchingTimeoutId.current = setTimeout(onRefreshingFinish, WAIT_FETCHING_TIMEOUT_MS);\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) => (platform === 'ios' ? prevSpinnerY : initParams.refreshing));\n\n      onRefresh();\n    }\n  }, [refreshing, onRefresh, onRefreshingFinish, platform, initParams.refreshing]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n        /* istanbul ignore if: TODO написать тест */\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  useIsomorphicLayoutEffect(\n    function toggleDocumentOverscrollBehavior() {\n      return window && (watching || refreshing)\n        ? initializeBrowserGesturePreventionEffect(window)\n        : undefined;\n    },\n    [window, watching, refreshing],\n  );\n\n  const startYRef = React.useRef(0);\n\n  const onTouchStart = (event: CustomTouchEvent) => {\n    if (refreshing) {\n      cancelEvent(event);\n      return;\n    }\n    setTouchDown(true);\n    startYRef.current = event.startY;\n  };\n\n  const iosRefreshStartedRef = React.useRef(false);\n  const onTouchMove = (event: CustomTouchEvent) => {\n    const { isY, shiftY } = event;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(event);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      const iosCanStartRefreshDuringGesture =\n        platform === 'ios' && progress > 85 && !refreshing && !iosRefreshStartedRef.current;\n      if (iosCanStartRefreshDuringGesture) {\n        iosRefreshStartedRef.current = true;\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(event);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n    iosRefreshStartedRef.current = false;\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = '';\n\n  if (platform === 'ios' && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === 'ios' && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        aria-live=\"polite\"\n        aria-busy={!!isFetching}\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        className={classNames(\n          styles['PullToRefresh'],\n          platform === 'ios' && styles['PullToRefresh--ios'],\n          watching && styles['PullToRefresh--watching'],\n          refreshing && styles['PullToRefresh--refreshing'],\n          className,\n        )}\n      >\n        <FixedLayout className={styles['PullToRefresh__controls']} useParentWidth>\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          className={styles['PullToRefresh__content']}\n          style={{\n            transform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"],"names":["PullToRefresh","WAIT_FETCHING_TIMEOUT_MS","cancelEvent","event","originalEvent","cancelable","preventDefault","stopPropagation","children","isFetching","onRefresh","className","restProps","platform","usePlatform","scroll","useScroll","window","useDOM","prevIsFetching","usePrevious","initParams","React","useMemo","start","max","maxY","refreshing","positionMultiplier","spinnerY","setSpinnerY","useState","watching","setWatching","setRefreshing","canRefresh","setCanRefresh","touchDown","setTouchDown","prevTouchDown","touchY","useRef","contentShift","setContentShift","spinnerProgress","setSpinnerProgress","resetRefreshingState","useCallback","onRefreshingFinish","waitFetchingTimeoutId","useIsomorphicLayoutEffect","undefined","clearTimeout","current","runRefreshing","setTimeout","prevSpinnerY","toggleDocumentOverscrollBehavior","initializeBrowserGesturePreventionEffect","startYRef","onTouchStart","startY","iosRefreshStartedRef","onTouchMove","isY","shiftY","pageYOffset","getScroll","y","shift","Math","currentY","clamp","progress","abs","iosCanStartRefreshDuringGesture","onTouchEnd","spinnerTransform","contentTransform","TouchRootContext","Provider","value","Touch","aria-live","aria-busy","onStart","onMove","onEnd","classNames","FixedLayout","useParentWidth","PullToRefreshSpinner","style","transform","opacity","on","div"],"mappings":";;;;+BA+CaA;;;eAAAA;;;;;;;;;iEA/CU;sBACI;sBACL;6BACM;6BACA;qBACoD;2CACtC;+BAEa;6BAC3B;uBACkC;uEACjC;sCACQ;AAGrC,MAAMC,2BAA2B;AAEjC,SAASC,YAAYC,KAAuB;IAC1C,0FAA0F,GAC1F,IAAI,CAACA,OAAO;QACV,OAAO;IACT;IACA,IAAI,oBAAoBA,MAAMC,aAAa,IAAID,MAAMC,aAAa,CAACC,UAAU,EAAE;QAC7EF,MAAMC,aAAa,CAACE,cAAc;IACpC;IACA,IAAI,qBAAqBH,MAAMC,aAAa,EAAE;QAC5CD,MAAMC,aAAa,CAACG,eAAe;IACrC;IACA,OAAO;AACT;AAkBO,MAAMP,gBAAgB;QAAC,EAC5BQ,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,SAAS,EAEU,WADhBC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWC,IAAAA,wBAAW;IAC5B,MAAMC,SAASC,IAAAA,wBAAS;IACxB,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,WAAM;IACzB,MAAMC,iBAAiBC,IAAAA,wBAAW,EAACX;IAEnC,MAAMY,aAAaC,OAAMC,OAAO,CAC9B,IAAO,CAAA;YACLC,OAAOX,aAAa,QAAQ,CAAC,KAAK,CAAC;YACnCY,KAAKZ,aAAa,QAAQ,KAAK;YAC/Ba,MAAMb,aAAa,QAAQ,MAAM;YACjCc,YAAYd,aAAa,QAAQ,KAAK;YACtCe,oBAAoBf,aAAa,QAAQ,OAAO;QAClD,CAAA,GACA;QAACA;KAAS;IAGZ,MAAM,CAACgB,UAAUC,YAAY,GAAGR,OAAMS,QAAQ,CAACV,WAAWG,KAAK;IAC/D,MAAM,CAACQ,UAAUC,YAAY,GAAGX,OAAMS,QAAQ,CAAC;IAC/C,MAAM,CAACJ,YAAYO,cAAc,GAAGZ,OAAMS,QAAQ,CAAC;IACnD,MAAM,CAACI,YAAYC,cAAc,GAAGd,OAAMS,QAAQ,CAAC;IACnD,MAAM,CAACM,WAAWC,aAAa,GAAGhB,OAAMS,QAAQ,CAAC;IACjD,MAAMQ,gBAAgBnB,IAAAA,wBAAW,EAACiB;IAElC,MAAMG,SAASlB,OAAMmB,MAAM,CAAC;IAC5B,MAAM,CAACC,cAAcC,gBAAgB,GAAGrB,OAAMS,QAAQ,CAAC;IACvD,MAAM,CAACa,iBAAiBC,mBAAmB,GAAGvB,OAAMS,QAAQ,CAAC;IAE7D,MAAMe,uBAAuBxB,OAAMyB,WAAW,CAAC;QAC7Cd,YAAY;QACZG,cAAc;QACdF,cAAc;QACdJ,YAAYT,WAAWG,KAAK;QAC5BqB,mBAAmB;QACnBF,gBAAgB;IAClB,GAAG;QAACtB;KAAW;IAEf,MAAM2B,qBAAqB1B,OAAMyB,WAAW,CAAC;QAC3C,IAAI,CAACV,WAAW;YACdS;QACF;IACF,GAAG;QAACT;QAAWS;KAAqB;IAEpC,MAAMG,wBAAwB3B,OAAMmB,MAAM;IAE1CS,IAAAA,oDAAyB,EAAC;QACxB,IAAI/B,mBAAmBgC,aAAahC,kBAAkB,CAACV,YAAY;YACjEuC;QACF;IACF,GAAG;QAAC7B;QAAgBV;QAAYuC;KAAmB;IAEnDE,IAAAA,oDAAyB,EAAC;QACxB,IAAI/B,mBAAmBgC,aAAa,CAAChC,kBAAkBV,YAAY;YACjE2C,aAAaH,sBAAsBI,OAAO;QAC5C;IACF,GAAG;QAAC5C;QAAYU;KAAe;IAE/B,MAAMmC,gBAAgBhC,OAAMyB,WAAW,CAAC;QACtC,IAAI,CAACpB,cAAcjB,WAAW;YAC5B,wDAAwD;YACxD0C,aAAaH,sBAAsBI,OAAO;YAC1CJ,sBAAsBI,OAAO,GAAGE,WAAWP,oBAAoB/C;YAE/DiC,cAAc;YACdJ,YAAY,CAAC0B,eAAkB3C,aAAa,QAAQ2C,eAAenC,WAAWM,UAAU;YAExFjB;QACF;IACF,GAAG;QAACiB;QAAYjB;QAAWsC;QAAoBnC;QAAUQ,WAAWM,UAAU;KAAC;IAE/EuB,IAAAA,oDAAyB,EAAC;QACxB,IAAIX,kBAAkBY,aAAaZ,iBAAiB,CAACF,WAAW;YAC9D,IAAI,CAACV,cAAcQ,YAAY;gBAC7BmB;YACF,OAAO,IAAI3B,cAAc,CAAClB,YAAY;gBACpC,gDAAgD;gBAChDqC;YACA,0CAA0C,GAC5C,OAAO;gBACL,gDAAgD;gBAChD,4DAA4D;gBAC5DhB,YAAYH,aAAaN,WAAWM,UAAU,GAAGN,WAAWG,KAAK;gBACjEqB,mBAAmB;gBACnBF,gBAAgB;YAClB;QACF;IACF,GAAG;QACDtB;QACAF;QACAV;QACAuC;QACAT;QACAF;QACAV;QACAQ;QACAmB;KACD;IAEDJ,IAAAA,oDAAyB,EACvB,SAASO;QACP,OAAOxC,UAAWe,CAAAA,YAAYL,UAAS,IACnC+B,IAAAA,6CAAwC,EAACzC,UACzCkC;IACN,GACA;QAAClC;QAAQe;QAAUL;KAAW;IAGhC,MAAMgC,YAAYrC,OAAMmB,MAAM,CAAC;IAE/B,MAAMmB,eAAe,CAACzD;QACpB,IAAIwB,YAAY;YACdzB,YAAYC;YACZ;QACF;QACAmC,aAAa;QACbqB,UAAUN,OAAO,GAAGlD,MAAM0D,MAAM;IAClC;IAEA,MAAMC,uBAAuBxC,OAAMmB,MAAM,CAAC;IAC1C,MAAMsB,cAAc,CAAC5D;QACnB,MAAM,EAAE6D,GAAG,EAAEC,MAAM,EAAE,GAAG9D;QACxB,MAAM,EAAEqB,KAAK,EAAEC,GAAG,EAAE,GAAGJ;QACvB,MAAM6C,cAAcnD,mBAAAA,6BAAAA,OAAQoD,SAAS,GAAGC,CAAC;QAEzC,IAAIpC,YAAYK,WAAW;YACzBnC,YAAYC;YAEZ,MAAM,EAAEyB,kBAAkB,EAAEF,IAAI,EAAE,GAAGL;YAErC,MAAMgD,QAAQC,KAAK7C,GAAG,CAAC,GAAGwC,SAASzB,OAAOa,OAAO;YAEjD,MAAMkB,WAAWC,IAAAA,WAAK,EAAChD,QAAQ6C,QAAQzC,oBAAoBJ,OAAOE;YAClE,MAAM+C,WAAWF,WAAW,CAAC,KAAKD,KAAKI,GAAG,CAAC,AAACH,CAAAA,WAAW,EAAC,IAAK9C,OAAO,KAAK;YAEzEK,YAAYyC;YACZ1B,mBAAmB2B,IAAAA,WAAK,EAACC,UAAU,GAAG;YACtCrC,cAAcqC,WAAW;YACzB9B,gBAAgB,AAAC4B,CAAAA,WAAW,EAAC,IAAK;YAElC,MAAMI,kCACJ9D,aAAa,SAAS4D,WAAW,MAAM,CAAC9C,cAAc,CAACmC,qBAAqBT,OAAO;YACrF,IAAIsB,iCAAiC;gBACnCb,qBAAqBT,OAAO,GAAG;gBAC/BC;YACF;QACF,OAAO,IAAIU,OAAOE,gBAAgB,KAAKD,SAAS,KAAK,CAACtC,cAAcU,WAAW;YAC7EnC,YAAYC;YAEZqC,OAAOa,OAAO,GAAGY;YACjBhC,YAAY;YACZH,YAAYN;YACZqB,mBAAmB;QACrB;IACF;IAEA,MAAM+B,aAAa;QACjB3C,YAAY;QACZK,aAAa;QACbwB,qBAAqBT,OAAO,GAAG;IACjC;IAEA,MAAMwB,mBAAmB,CAAC,eAAe,EAAEhD,SAAS,MAAM,CAAC;IAC3D,IAAIiD,mBAAmB;IAEvB,IAAIjE,aAAa,SAASc,cAAc,CAACU,WAAW;QAClDyC,mBAAmB;IACrB,OAAO,IAAIjE,aAAa,SAAU6B,CAAAA,gBAAgBf,UAAS,GAAI;QAC7DmD,mBAAmB,CAAC,eAAe,EAAEpC,aAAa,MAAM,CAAC;IAC3D;IAEA,qBACE,qBAACqC,qBAAgB,CAACC,QAAQ;QAACC,OAAO;kBAChC,cAAA,sBAACC,YAAK;YACJC,aAAU;YACVC,aAAW,CAAC,CAAC3E;WACTG;YACJyE,SAASzB;YACT0B,QAAQvB;YACRwB,OAAOX;YACPjE,WAAW6E,IAAAA,gBAAU,uBAEnB3E,aAAa,mCACbmB,2CACAL,+CACAhB;;8BAGF,qBAAC8E,wBAAW;oBAAC9E,SAAS;oBAAqC+E,cAAc;8BACvE,cAAA,qBAACC,0CAAoB;wBACnBC,OAAO;4BACLC,WAAWhB;4BACXiB,SAAS9D,YAAYL,cAAcQ,aAAa,IAAI;wBACtD;wBACA4D,IAAIpE;wBACJ8C,UAAU9C,aAAawB,YAAYP;;;8BAIvC,qBAACoD;oBACCrF,SAAS;oBACTiF,OAAO;wBACLC,WAAWf;oBACb;8BAECtE;;;;;AAKX"}