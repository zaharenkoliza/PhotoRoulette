{"version":3,"sources":["../../../../src/components/FixedLayout/FixedLayout.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useResizeObserver } from '../../hooks/useResizeObserver';\nimport { useDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport type { HasComponent, HTMLAttributesWithRootRef } from '../../types';\nimport { OnboardingTooltipContainer } from '../OnboardingTooltip/OnboardingTooltipContainer';\nimport { SplitColContext } from '../SplitCol/SplitColContext';\nimport styles from './FixedLayout.module.css';\n\nconst stylesVertical = {\n  top: styles['FixedLayout--vertical-top'],\n  bottom: classNames(\n    styles['FixedLayout--vertical-bottom'],\n    'vkuiInternalFixedLayout--vertical-bottom',\n  ),\n};\n\nexport interface FixedLayoutProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasComponent {\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n  /**\n   * Всегда соответствовать ширине родителя.\n   * Ширина пересчитывается по событию `window` `resize`.\n   */\n  useParentWidth?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n  bottom: number;\n  width: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FixedLayout\n */\nexport const FixedLayout = ({\n  children,\n  style,\n  vertical,\n  getRootRef,\n  filled,\n  className,\n  useParentWidth,\n  ...restProps\n}: FixedLayoutProps): React.ReactNode => {\n  const platform = usePlatform();\n  const ref = React.useRef<HTMLElement | null>(null);\n  const [width, setWidth] = React.useState<string | undefined>(undefined);\n  const { window } = useDOM();\n  const { colRef } = React.useContext(SplitColContext);\n  const parentRef = React.useRef<HTMLElement | null>(null);\n\n  const handleRootRef = useCallback(\n    (node: HTMLElement | null) => {\n      if (!node) {\n        return;\n      }\n\n      setRef(node, getRootRef);\n      setRef(node, ref);\n      setRef(node.parentElement, parentRef);\n    },\n    [getRootRef],\n  );\n\n  const doResize = () => {\n    if (useParentWidth && parentRef.current) {\n      const parentWidth = parentRef.current.getBoundingClientRect().width;\n      setWidth(parentWidth ? `${parentWidth}px` : undefined);\n    } else if (colRef?.current) {\n      const computedStyle = getComputedStyle(colRef.current);\n\n      setWidth(\n        `${\n          colRef.current.clientWidth -\n          parseFloat(computedStyle.paddingLeft || '0') -\n          parseFloat(computedStyle.paddingRight || '0')\n        }px`,\n      );\n    } else {\n      setWidth(undefined);\n    }\n  };\n  React.useEffect(doResize, [colRef, platform, ref, useParentWidth]);\n\n  useGlobalEventListener(window, 'resize', doResize);\n  useResizeObserver(useParentWidth ? parentRef : colRef, doResize);\n\n  return (\n    <OnboardingTooltipContainer\n      {...restProps}\n      fixed\n      ref={handleRootRef}\n      className={classNames(\n        styles['FixedLayout'],\n        platform === 'ios' && 'vkuiInternalFixedLayout--ios',\n        filled && styles['FixedLayout--filled'],\n        vertical && stylesVertical[vertical],\n        className,\n      )}\n      style={{ ...style, width }}\n    >\n      {children}\n    </OnboardingTooltipContainer>\n  );\n};\n"],"names":["FixedLayout","stylesVertical","top","bottom","classNames","children","style","vertical","getRootRef","filled","className","useParentWidth","restProps","platform","usePlatform","ref","React","useRef","width","setWidth","useState","undefined","window","useDOM","colRef","useContext","SplitColContext","parentRef","handleRootRef","useCallback","node","setRef","parentElement","doResize","current","parentWidth","getBoundingClientRect","computedStyle","getComputedStyle","clientWidth","parseFloat","paddingLeft","paddingRight","useEffect","useGlobalEventListener","useResizeObserver","OnboardingTooltipContainer","fixed"],"mappings":";;;;+BA6CaA;;;eAAAA;;;;;;;;iEA7Ce;sBAED;wCACY;6BACX;mCACM;qBACX;uBACA;4CAEoB;iCACX;AAGhC,MAAMC,iBAAiB;IACrBC,GAAG;IACHC,QAAQC,IAAAA,gBAAU,sCAEhB;AAEJ;AA0BO,MAAMJ,cAAc;QAAC,EAC1BK,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,cAAc,EAEG,WADdC;QAPHP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWC,IAAAA,wBAAW;IAC5B,MAAMC,MAAMC,OAAMC,MAAM,CAAqB;IAC7C,MAAM,CAACC,OAAOC,SAAS,GAAGH,OAAMI,QAAQ,CAAqBC;IAC7D,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,WAAM;IACzB,MAAM,EAAEC,MAAM,EAAE,GAAGR,OAAMS,UAAU,CAACC,gCAAe;IACnD,MAAMC,YAAYX,OAAMC,MAAM,CAAqB;IAEnD,MAAMW,gBAAgBC,IAAAA,kBAAW,EAC/B,CAACC;QACC,IAAI,CAACA,MAAM;YACT;QACF;QAEAC,IAAAA,aAAM,EAACD,MAAMtB;QACbuB,IAAAA,aAAM,EAACD,MAAMf;QACbgB,IAAAA,aAAM,EAACD,KAAKE,aAAa,EAAEL;IAC7B,GACA;QAACnB;KAAW;IAGd,MAAMyB,WAAW;QACf,IAAItB,kBAAkBgB,UAAUO,OAAO,EAAE;YACvC,MAAMC,cAAcR,UAAUO,OAAO,CAACE,qBAAqB,GAAGlB,KAAK;YACnEC,SAASgB,cAAc,CAAC,EAAEA,YAAY,EAAE,CAAC,GAAGd;QAC9C,OAAO,IAAIG,mBAAAA,6BAAAA,OAAQU,OAAO,EAAE;YAC1B,MAAMG,gBAAgBC,iBAAiBd,OAAOU,OAAO;YAErDf,SACE,CAAC,EACCK,OAAOU,OAAO,CAACK,WAAW,GAC1BC,WAAWH,cAAcI,WAAW,IAAI,OACxCD,WAAWH,cAAcK,YAAY,IAAI,KAC1C,EAAE,CAAC;QAER,OAAO;YACLvB,SAASE;QACX;IACF;IACAL,OAAM2B,SAAS,CAACV,UAAU;QAACT;QAAQX;QAAUE;QAAKJ;KAAe;IAEjEiC,IAAAA,8CAAsB,EAACtB,QAAQ,UAAUW;IACzCY,IAAAA,oCAAiB,EAAClC,iBAAiBgB,YAAYH,QAAQS;IAEvD,qBACE,qBAACa,sDAA0B,8CACrBlC;QACJmC,KAAK;QACLhC,KAAKa;QACLlB,WAAWN,IAAAA,gBAAU,qBAEnBS,aAAa,SAAS,gCACtBJ,qCACAF,YAAYN,cAAc,CAACM,SAAS,EACpCG;QAEFJ,OAAO,4CAAKA;YAAOY;;kBAElBb;;AAGP"}