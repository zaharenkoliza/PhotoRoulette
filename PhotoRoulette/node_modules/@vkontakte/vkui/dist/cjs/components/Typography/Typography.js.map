{"version":3,"sources":["../../../../src/components/Typography/Typography.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { HasComponent, HasRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Typography.module.css';\n\nconst stylesWeight = {\n  '1': styles['Typography--weight-1'],\n  '2': styles['Typography--weight-2'],\n  '3': styles['Typography--weight-3'],\n};\n\nexport interface HasCaps {\n  caps?: boolean;\n}\n\nexport interface TypographyProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasComponent,\n    HasRootRef<HTMLElement> {\n  /**\n   * Задаёт начертание шрифта, отличное от стандартного.\n   */\n  weight?: '1' | '2' | '3';\n  /**\n   * Убирает внешние отступы\n   */\n  normalize?: boolean;\n  /**\n   * Делает блок инлайновым\n   */\n  inline?: boolean;\n}\n\nexport const Typography = ({\n  weight,\n  Component = 'span',\n  normalize,\n  inline,\n  ...restProps\n}: TypographyProps): React.ReactNode => (\n  <RootComponent\n    Component={Component}\n    baseClassName={classNames(\n      styles['Typography'],\n      normalize && styles['Typography--normalize'],\n      inline && styles['Typography--inline'],\n      weight && stylesWeight[weight],\n    )}\n    {...restProps}\n  />\n);\n"],"names":["Typography","stylesWeight","weight","Component","normalize","inline","restProps","RootComponent","baseClassName","classNames"],"mappings":";;;;+BAkCaA;;;eAAAA;;;;;;;iEAlCU;sBACI;+BAEG;AAG9B,MAAMC,eAAe;IACnB,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAwBO,MAAMD,aAAa;QAAC,EACzBE,MAAM,EACNC,YAAY,MAAM,EAClBC,SAAS,EACTC,MAAM,EAEU,WADbC;QAJHJ;QACAC;QACAC;QACAC;;yBAGA,qBAACE,4BAAa;QACZJ,WAAWA;QACXK,eAAeC,IAAAA,gBAAU,oBAEvBL,0CACAC,oCACAH,UAAUD,YAAY,CAACC,OAAO;OAE5BI"}