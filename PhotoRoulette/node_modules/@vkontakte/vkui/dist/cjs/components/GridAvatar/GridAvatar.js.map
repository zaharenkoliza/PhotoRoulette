{"version":3,"sources":["../../../../src/components/GridAvatar/GridAvatar.tsx"],"sourcesContent":["import { classNames } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ImageBase, type ImageBaseProps } from '../ImageBase/ImageBase';\nimport { GridAvatarBadge, type GridAvatarBadgeProps } from './GridAvatarBadge/GridAvatarBadge';\nimport styles from './GridAvatar.module.css';\n\nexport { GridAvatarBadgeProps };\n\nconst GRID_AVATAR_DEFAULT_SIZE = 48;\n\nexport const MAX_GRID_LENGTH = 4;\n\nexport interface GridAvatarProps extends Omit<ImageBaseProps, 'src' | 'fallbackIcon'> {\n  /**\n   * Массив со ссылками. От 1 до 4 элементов.\n   */\n  src?: string[];\n}\n\nconst warn = warnOnce('GridAvatar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\nexport const GridAvatar: React.FC<GridAvatarProps> & { Badge: typeof GridAvatarBadge } = ({\n  src = [],\n  size = GRID_AVATAR_DEFAULT_SIZE,\n  className,\n  children,\n  ...restProps\n}: GridAvatarProps) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(`Длина массива src (${src.length}) больше максимальной (${MAX_GRID_LENGTH})`, 'error');\n    }\n  }\n\n  return (\n    <ImageBase {...restProps} size={size} className={classNames(styles['GridAvatar'], className)}>\n      <div className={styles['GridAvatar__in']} aria-hidden>\n        {src.map((url, index) =>\n          index < MAX_GRID_LENGTH ? (\n            <div\n              key={index}\n              className={styles['GridAvatar__item']}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          ) : null,\n        )}\n      </div>\n      {children}\n    </ImageBase>\n  );\n};\n\nGridAvatar.Badge = GridAvatarBadge;\n"],"names":["GridAvatar","MAX_GRID_LENGTH","GRID_AVATAR_DEFAULT_SIZE","warn","warnOnce","src","size","className","children","restProps","process","env","NODE_ENV","length","ImageBase","classNames","div","aria-hidden","map","url","index","style","backgroundImage","Badge","GridAvatarBadge"],"mappings":";;;;;;;;;;;IAwBaA,UAAU;eAAVA;;IAdAC,eAAe;eAAfA;;;;;;;sBAVc;0BACF;2BACsB;iCACY;AAK3D,MAAMC,2BAA2B;AAE1B,MAAMD,kBAAkB;AAS/B,MAAME,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,MAAMJ,aAA4E;QAAC,EACxFK,MAAM,EAAE,EACRC,OAAOJ,wBAAwB,EAC/BK,SAAS,EACTC,QAAQ,EAEQ,WADbC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,IAAIE,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,IAAIP,IAAIQ,MAAM,GAAGZ,iBAAiB;YAChCE,KAAK,CAAC,mBAAmB,EAAEE,IAAIQ,MAAM,CAAC,uBAAuB,EAAEZ,gBAAgB,CAAC,CAAC,EAAE;QACrF;IACF;IAEA,qBACE,sBAACa,oBAAS,8CAAKL;QAAWH,MAAMA;QAAMC,WAAWQ,IAAAA,gBAAU,oBAAuBR;;0BAChF,qBAACS;gBAAIT,SAAS;gBAA4BU,aAAW;0BAClDZ,IAAIa,GAAG,CAAC,CAACC,KAAKC,QACbA,QAAQnB,gCACN,qBAACe;wBAECT,SAAS;wBACTc,OAAO;4BAAEC,iBAAiB,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAC;wBAAC;uBAFnCC,SAIL;;YAGPZ;;;AAGP;AAEAR,WAAWuB,KAAK,GAAGC,gCAAe"}