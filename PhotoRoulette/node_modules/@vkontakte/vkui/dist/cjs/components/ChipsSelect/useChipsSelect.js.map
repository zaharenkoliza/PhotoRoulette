{"version":3,"sources":["../../../../src/components/ChipsSelect/useChipsSelect.ts"],"sourcesContent":["import * as React from 'react';\nimport { isEqual } from '@vkontakte/vkjs';\nimport { type SimulateReactInputTargetState } from '../../lib/react';\nimport { defaultFilterFn, type FilterFn } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport {\n  transformValue,\n  useChipsInput,\n  type UseChipsInputProps,\n} from '../ChipsInput/useChipsInput';\nimport {\n  DEFAULT_INPUT_VALUE,\n  DEFAULT_VALUE,\n  getNewOptionDataDefault,\n  getOptionLabelDefault,\n  getOptionValueDefault,\n} from '../ChipsInputBase/constants';\nimport type { ChipOption, ChipOptionLabel, ChipOptionValue } from '../ChipsInputBase/types';\nimport { DEFAULT_EMPTY_TEXT, DEFAULT_SELECTED_BEHAVIOR, isNotServicePreset } from './constants';\nimport type { OptionPreset } from './types';\n\nexport interface UseChipsSelectProps<O extends ChipOption = ChipOption>\n  extends UseChipsInputProps<O> {\n  options?: O[];\n  /**\n   * Возможность создавать чипы которых нет в списке:\n   * - `true` – добавление по кнопке Enter;\n   * - `<текст>` – помимо возможности добавления через Enter, в пункте меню появится кнопка с текстом.\n   * Текст для пункта, создающего чипы при клике, также отвечает за то, будет ли показан этот пункт\n   * (показывается после того как в списке не останется опций).\n   */\n  creatable?: boolean | string;\n  /**\n   * Текст, который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Показывать или скрывать уже выбранные опции.\n   */\n  selectedBehavior?: 'hide' | 'highlight';\n  filterFn?: false | FilterFn<O>;\n  /**\n   * Будет вызвано в момент скрытия выпадающего списка\n   */\n  onClose?: VoidFunction;\n  /**\n   * Будет вызвано в момент открытия выпадающего списка\n   */\n  onOpen?: VoidFunction;\n}\n\nexport const useChipsSelect = <O extends ChipOption>({\n  // common\n  disabled,\n\n  // option\n  value: valueProp,\n  defaultValue,\n  onChange,\n  getOptionLabel = getOptionLabelDefault,\n  getOptionValue = getOptionValueDefault,\n  getNewOptionData = getNewOptionDataDefault,\n\n  // input\n  inputValue: inputValueProp,\n  defaultInputValue = DEFAULT_INPUT_VALUE,\n  onInputChange: onInputChangeProp,\n\n  // dropdown\n  creatable = false,\n  emptyText = DEFAULT_EMPTY_TEXT,\n  filterFn = defaultFilterFn,\n  selectedBehavior = DEFAULT_SELECTED_BEHAVIOR,\n  options: optionsProp = DEFAULT_VALUE,\n  onClose,\n  onOpen,\n}: UseChipsSelectProps<O>): {\n  // options\n  value: Array<\n    O & {\n      label: ChipOptionLabel;\n      value: ChipOptionValue;\n    }\n  >;\n  // input\n  inputValue: string;\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  // dropdown states\n  options: Array<OptionPreset<O>>;\n  opened: boolean;\n  setOpened: (isOpened: boolean) => void;\n  focusedOption: O | null;\n  focusedOptionIndex: number | null;\n  setFocusedOption: React.Dispatch<React.SetStateAction<O | null>>;\n  setFocusedOptionIndex: React.Dispatch<React.SetStateAction<number | null>>;\n  addOption: (newValue: string | O) => void;\n  addOptionFromInput: (inputValue: string) => void;\n  removeOption: (newValue: ChipOptionValue | O) => void;\n  clearOptions: () => void;\n  inputRef: React.RefObject<HTMLInputElement & SimulateReactInputTargetState>;\n  clearInput: () => void;\n} => {\n  const { value, inputValue, onInputChange, ...restChipsInputProps } = useChipsInput({\n    // option\n    value: valueProp,\n    defaultValue,\n    onChange,\n    getOptionValue,\n    getOptionLabel,\n    getNewOptionData,\n\n    // input\n    inputValue: inputValueProp,\n    defaultInputValue,\n    onInputChange: onInputChangeProp,\n\n    // other\n    disabled,\n  });\n\n  // dropdown\n  const [opened, setOpened] = React.useState(false);\n  const [options, setOptions] = React.useState<Array<OptionPreset<O>>>(() =>\n    opened\n      ? transformOptions({\n          value,\n          getOptionValue,\n          getOptionLabel,\n          inputValue,\n          emptyText,\n          creatable,\n          filterFn,\n          options: optionsProp,\n          selectedBehavior,\n        })\n      : [],\n  );\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | null>(0);\n  const [focusedOption, setFocusedOption] = React.useState<O | null>(null);\n\n  const handleOpened = React.useCallback(\n    (isOpened: boolean) => {\n      isOpened ? onOpen?.() : onClose?.();\n      setOpened(isOpened);\n    },\n    [onOpen, onClose],\n  );\n\n  const handleInputChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onInputChange(event);\n\n      if (!opened) {\n        handleOpened(true);\n        setFocusedOptionIndex(0);\n      }\n    },\n    [onInputChange, opened, handleOpened],\n  );\n\n  useIsomorphicLayoutEffect(\n    function handleDropdownOpen() {\n      if (!opened) {\n        return;\n      }\n\n      setOptions((prevOptions) => {\n        const nextOptions = transformOptions({\n          value,\n          getOptionValue,\n          getOptionLabel,\n          inputValue,\n          emptyText,\n          creatable,\n          filterFn,\n          options: optionsProp,\n          selectedBehavior,\n        });\n\n        if (isEqual(prevOptions, nextOptions)) {\n          return prevOptions;\n        }\n\n        return nextOptions;\n      });\n    },\n    [\n      opened,\n      value,\n      getOptionLabel,\n      getOptionValue,\n      inputValue,\n      optionsProp,\n      creatable,\n      selectedBehavior,\n      filterFn,\n    ],\n  );\n\n  return {\n    ...restChipsInputProps,\n\n    // options\n    value,\n\n    // input\n    inputValue,\n    onInputChange: handleInputChange,\n\n    // dropdown states\n    options,\n    opened,\n    setOpened: handleOpened,\n    focusedOption,\n    focusedOptionIndex,\n    setFocusedOption,\n    setFocusedOptionIndex,\n  };\n};\n\nfunction transformOptions<O extends ChipOption>({\n  value,\n  getOptionValue = getOptionValueDefault,\n  getOptionLabel = getOptionLabelDefault,\n  inputValue = DEFAULT_INPUT_VALUE,\n  emptyText = DEFAULT_EMPTY_TEXT,\n  creatable = false,\n  filterFn = defaultFilterFn,\n  options: optionsProp = DEFAULT_VALUE,\n  selectedBehavior = DEFAULT_SELECTED_BEHAVIOR,\n}: Required<Pick<UseChipsSelectProps<O>, 'value'>> &\n  Pick<\n    UseChipsSelectProps<O>,\n    | 'getOptionValue'\n    | 'getOptionLabel'\n    | 'inputValue'\n    | 'emptyText'\n    | 'creatable'\n    | 'filterFn'\n    | 'options'\n    | 'selectedBehavior'\n  >) {\n  const filteredOptionsProp = filterFn\n    ? optionsProp.filter((option) => filterFn(inputValue, option, getOptionLabel))\n    : optionsProp;\n\n  if (filteredOptionsProp.length === 0) {\n    if (inputValue !== DEFAULT_INPUT_VALUE && typeof creatable === 'string') {\n      return [{ actionText: creatable }];\n    }\n    return [{ placeholder: emptyText }];\n  }\n\n  const parsedOptions = transformValue(filteredOptionsProp, getOptionValue, getOptionLabel);\n\n  if (selectedBehavior === 'hide') {\n    const selected = value.map((item) => item.value);\n    return parsedOptions.filter((item) =>\n      isNotServicePreset(item) ? !selected.includes(item.value) : false,\n    );\n  }\n  return parsedOptions;\n}\n"],"names":["useChipsSelect","disabled","value","valueProp","defaultValue","onChange","getOptionLabel","getOptionLabelDefault","getOptionValue","getOptionValueDefault","getNewOptionData","getNewOptionDataDefault","inputValue","inputValueProp","defaultInputValue","DEFAULT_INPUT_VALUE","onInputChange","onInputChangeProp","creatable","emptyText","DEFAULT_EMPTY_TEXT","filterFn","defaultFilterFn","selectedBehavior","DEFAULT_SELECTED_BEHAVIOR","options","optionsProp","DEFAULT_VALUE","onClose","onOpen","useChipsInput","restChipsInputProps","opened","setOpened","React","useState","setOptions","transformOptions","focusedOptionIndex","setFocusedOptionIndex","focusedOption","setFocusedOption","handleOpened","useCallback","isOpened","handleInputChange","event","useIsomorphicLayoutEffect","handleDropdownOpen","prevOptions","nextOptions","isEqual","filteredOptionsProp","filter","option","length","actionText","placeholder","parsedOptions","transformValue","selected","map","item","isNotServicePreset","includes"],"mappings":"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"}