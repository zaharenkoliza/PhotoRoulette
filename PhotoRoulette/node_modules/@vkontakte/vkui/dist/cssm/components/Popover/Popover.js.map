{"version":3,"sources":["../../../../src/components/Popover/Popover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePatchChildren } from '../../hooks/usePatchChildren';\nimport { injectAriaExpandedPropByRole } from '../../lib/accessibility';\nimport { animationFadeClassNames, transformOriginClassNames } from '../../lib/animation';\nimport {\n  type FloatingComponentProps,\n  type FloatingContentRenderProp,\n  type OnShownChange,\n  useFloatingMiddlewaresBootstrap,\n  useFloatingWithInteractions,\n  usePlacementChangeCallback,\n} from '../../lib/floating';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport {\n  DEFAULT_ARROW_HEIGHT,\n  DEFAULT_ARROW_PADDING,\n  DefaultIcon,\n} from '../FloatingArrow/DefaultIcon';\nimport {\n  FloatingArrow,\n  type FloatingArrowProps as FloatingArrowPropsPrivate,\n} from '../FloatingArrow/FloatingArrow';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport type { FocusTrapProps } from '../FocusTrap/FocusTrap';\nimport styles from './Popover.module.css';\n\n/**\n * @alias\n * @public\n */\nexport type PopoverArrowProps = Omit<\n  FloatingArrowPropsPrivate,\n  'getRootRef' | 'coords' | 'placement' | 'Icon'\n>;\n\n/**\n * @alias\n * @public\n */\nexport type PopoverOnShownChange = OnShownChange;\n\n/**\n * @alias\n * @public\n */\nexport type PopoverContentRenderProp = FloatingContentRenderProp;\n\ntype AllowedFloatingComponentProps = Pick<\n  FloatingComponentProps,\n  | 'arrow'\n  | 'arrowHeight'\n  | 'arrowPadding'\n  | 'placement'\n  | 'onPlacementChange'\n  | 'trigger'\n  | 'content'\n  | 'hoverDelay'\n  | 'closeAfterClick'\n  | 'offsetByMainAxis'\n  | 'offsetByCrossAxis'\n  | 'defaultShown'\n  | 'shown'\n  | 'onShownChange'\n  | 'onShownChanged'\n  | 'usePortal'\n  | 'sameWidth'\n  | 'hideWhenReferenceHidden'\n  | 'disabled'\n  | 'disableInteractive'\n  | 'disableCloseOnClickOutside'\n  | 'disableCloseOnEscKey'\n  | 'autoFocus'\n  | 'restoreFocus'\n  | 'children'\n  | 'zIndex'\n  | 'disableFlipMiddleware'\n  | 'customMiddlewares'\n>;\n\n/**\n * @public\n */\nexport interface PopoverProps\n  extends Omit<AllowedFloatingComponentProps, 'autoFocus'>,\n    Omit<HTMLAttributesWithRootRef<HTMLDivElement>, keyof FloatingComponentProps> {\n  /**\n   * Отключает у всплывающего элемента стилизацию по умолчанию.\n   *\n   * У `content`:\n   * - _background_\n   * - _border-radius_\n   * - _box-shadow_\n   *\n   * У `arrow`:\n   * - _color_\n   *\n   * Используется в случае, если необходимо стилизовать по своему. Для `arrow` _color_ можно\n   * определить через в `arrowProps.iconClassName` или `arrowProps.iconStyle`.\n   */\n  noStyling?: boolean;\n  /**\n   * Позволяет набросить на стрелку пользовательские атрибуты.\n   */\n  arrowProps?: PopoverArrowProps;\n  /**\n   * Пользовательская SVG иконка.\n   *\n   * Требования:\n   *\n   * 1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n   * 2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   *    растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   *    (см. https://github.com/VKCOM/VKUI/pull/4496).\n   * 3. Передайте высоту иконки в параметр `arrowHeight`. В значении высоты можно исключить хак с `1px` из п.2.\n   * 4. Убедитесь, что компонент принимает все валидные для SVG параметры.\n   * 5. Убедитесь, что SVG и её элементы наследует цвет через `fill=\"currentColor\"`.\n   */\n  ArrowIcon?: FloatingArrowPropsPrivate['Icon'];\n  /**\n   * Используется для того, чтобы не удалять поповер из DOM дерева при скрытии.\n   */\n  keepMounted?: boolean;\n  autoFocus?: FocusTrapProps['autoFocus'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Popover\n */\nexport const Popover = ({\n  // UsePopoverProps\n  arrow: withArrow,\n  arrowHeight = DEFAULT_ARROW_HEIGHT,\n  arrowPadding = DEFAULT_ARROW_PADDING,\n  placement: expectedPlacement = 'bottom-start',\n  onPlacementChange,\n  disableFlipMiddleware = false,\n  trigger = 'click',\n  content,\n  hoverDelay = 150,\n  closeAfterClick,\n  offsetByMainAxis = 8,\n  offsetByCrossAxis = 0,\n  sameWidth,\n  hideWhenReferenceHidden,\n  disabled,\n  disableInteractive,\n  disableCloseOnClickOutside,\n  disableCloseOnEscKey,\n  keepMounted = false,\n  customMiddlewares,\n  // uncontrolled\n  defaultShown = false,\n  // controlled\n  shown: shownProp,\n  onShownChange,\n  onShownChanged,\n\n  // Для AppRootPortal\n  usePortal = true,\n\n  // Для FloatingArrow\n  arrowProps,\n  ArrowIcon = DefaultIcon,\n\n  // FocusTrapProps\n  autoFocus = true,\n  restoreFocus = true,\n  className,\n  children,\n  noStyling = false,\n  zIndex = 'var(--vkui--z_index_popout)',\n  // a11y\n  role = 'dialog',\n  ...restPopoverProps\n}: PopoverProps): React.ReactNode => {\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n  const { middlewares, strictPlacement } = useFloatingMiddlewaresBootstrap({\n    arrow: withArrow,\n    arrowRef,\n    arrowHeight,\n    arrowPadding,\n    placement: expectedPlacement,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    sameWidth,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware,\n    customMiddlewares,\n  });\n  const {\n    placement: resolvedPlacement,\n    shown,\n    willBeHide,\n    refs,\n    referenceProps,\n    floatingProps,\n    middlewareData,\n    onClose,\n    onRestoreFocus,\n    onEscapeKeyDown,\n  } = useFloatingWithInteractions({\n    middlewares,\n    placement: strictPlacement,\n    trigger,\n    hoverDelay,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged,\n  });\n\n  usePlacementChangeCallback(expectedPlacement, resolvedPlacement, onPlacementChange);\n\n  const [, child] = usePatchChildren<HTMLDivElement>(\n    children,\n    injectAriaExpandedPropByRole(referenceProps, shown, role),\n    refs.setReference,\n  );\n\n  let popover: React.ReactNode = null;\n  if (shown || keepMounted) {\n    const hidden = keepMounted && !shown;\n\n    let arrow: React.ReactElement | null = null;\n    if (withArrow) {\n      const { arrow: arrowCoords } = middlewareData;\n      arrow = (\n        <FloatingArrow\n          iconClassName={noStyling ? undefined : styles['Popover__arrow']}\n          {...arrowProps}\n          coords={arrowCoords}\n          placement={resolvedPlacement}\n          getRootRef={setArrowRef}\n          Icon={ArrowIcon}\n        />\n      );\n    }\n\n    popover = (\n      <AppRootPortal usePortal={usePortal}>\n        <div\n          ref={refs.setFloating}\n          className={classNames(styles['Popover'], hidden && styles['Popover--hidden'])}\n          {...floatingProps}\n          style={{\n            zIndex: !hidden ? zIndex : undefined,\n            ...floatingProps.style,\n          }}\n        >\n          <FocusTrap\n            {...restPopoverProps}\n            role={role}\n            className={classNames(\n              styles['Popover__in'],\n              noStyling ? undefined : styles['Popover__in--withStyling'],\n              willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in,\n              transformOriginClassNames[resolvedPlacement],\n              className,\n            )}\n            mount={!hidden}\n            disabled={hidden}\n            autoFocus={disableInteractive ? false : autoFocus}\n            restoreFocus={restoreFocus ? onRestoreFocus : false}\n            onClose={onEscapeKeyDown}\n          >\n            {arrow}\n            {typeof content === 'function' ? content({ onClose }) : content}\n          </FocusTrap>\n        </div>\n      </AppRootPortal>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {child}\n      {popover}\n    </React.Fragment>\n  );\n};\n"],"names":["React","classNames","usePatchChildren","injectAriaExpandedPropByRole","animationFadeClassNames","transformOriginClassNames","useFloatingMiddlewaresBootstrap","useFloatingWithInteractions","usePlacementChangeCallback","AppRootPortal","DEFAULT_ARROW_HEIGHT","DEFAULT_ARROW_PADDING","DefaultIcon","FloatingArrow","FocusTrap","styles","Popover","arrow","withArrow","arrowHeight","arrowPadding","placement","expectedPlacement","onPlacementChange","disableFlipMiddleware","trigger","content","hoverDelay","closeAfterClick","offsetByMainAxis","offsetByCrossAxis","sameWidth","hideWhenReferenceHidden","disabled","disableInteractive","disableCloseOnClickOutside","disableCloseOnEscKey","keepMounted","customMiddlewares","defaultShown","shown","shownProp","onShownChange","onShownChanged","usePortal","arrowProps","ArrowIcon","autoFocus","restoreFocus","className","children","noStyling","zIndex","role","restPopoverProps","arrowRef","setArrowRef","useState","middlewares","strictPlacement","resolvedPlacement","willBeHide","refs","referenceProps","floatingProps","middlewareData","onClose","onRestoreFocus","onEscapeKeyDown","child","setReference","popover","hidden","arrowCoords","iconClassName","undefined","coords","getRootRef","Icon","div","ref","setFloating","style","out","in","mount","Fragment"],"mappings":"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"}