{"version":3,"sources":["../../../../src/components/CustomScrollView/CustomScrollView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport type { HasRootRef } from '../../types';\nimport { ScrollX } from './ScrollX';\nimport { ScrollY } from './ScrollY';\nimport { type BarHandlers } from './types';\nimport { useCustomScrollViewResize } from './useCustomScrollViewResize';\nimport { useDetectScrollDirection } from './useDetectScrollDirection';\nimport { type TrackerOptionsProps } from './useTrackerVisibility';\nimport styles from './CustomScrollView.module.css';\n\nfunction hasPointerClassName(hasPointer: boolean | undefined) {\n  switch (hasPointer) {\n    case true:\n      return styles['CustomScrollView--hasPointer-true'];\n    case false:\n      return styles['CustomScrollView--hasPointer-false'];\n    case undefined:\n    default:\n      return styles['CustomScrollView--hasPointer-none'];\n  }\n}\n\nconst overscrollBehaviorClassNames = {\n  auto: undefined,\n  contain: styles['CustomScrollView__box--overscrollBehavior-contain'],\n  none: styles['CustomScrollView__box--overscrollBehavior-none'],\n};\n\nexport interface CustomScrollViewProps\n  extends React.AllHTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    TrackerOptionsProps {\n  windowResize?: boolean;\n  boxRef?: React.Ref<HTMLDivElement>;\n  className?: HTMLDivElement['className'];\n  onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;\n  children: React.ReactNode;\n  /**\n   * Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior)\n   */\n  overscrollBehavior?: 'auto' | 'contain' | 'none';\n  /**\n   * Включение замены горизонтального скролла\n   *\n   * > ⚠️ Важно: На версиях Firefox ниже 64 могут возникнуть проблемы при использовании этого флага, будьте осторожны\n   */\n  enableHorizontalScroll?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomScrollView\n */\nexport const CustomScrollView = ({\n  className,\n  children,\n  boxRef: externalBoxRef,\n  windowResize,\n  autoHideScrollbar = false,\n  autoHideScrollbarDelay,\n  enableHorizontalScroll = false,\n  onScroll: onScrollProp,\n  getRootRef,\n  overscrollBehavior = 'auto',\n  ...restProps\n}: CustomScrollViewProps): React.ReactNode => {\n  const { hasPointer } = useAdaptivity();\n\n  const boxRef = useExternRef(externalBoxRef);\n  const boxContentRef = React.useRef<HTMLDivElement>(null);\n\n  const detectScrollDirection = useDetectScrollDirection();\n\n  const barYHandlers = React.useRef<BarHandlers | null>(null);\n  const barXHandlers = React.useRef<BarHandlers | null>(null);\n\n  useCustomScrollViewResize({\n    windowResize,\n    boxContentRef,\n    onResize: () => {\n      barYHandlers.current?.resize();\n      barXHandlers.current?.resize();\n    },\n  });\n\n  const onScroll = (event: React.UIEvent<HTMLDivElement>) => {\n    const scrollDirection = detectScrollDirection(event);\n    switch (scrollDirection) {\n      case 'horizontal':\n        barXHandlers.current?.scroll();\n        break;\n      case 'vertical':\n        barYHandlers.current?.scroll();\n        break;\n    }\n    onScrollProp?.(event);\n  };\n\n  return (\n    <div\n      className={classNames(className, styles['CustomScrollView'], hasPointerClassName(hasPointer))}\n      ref={getRootRef}\n      {...restProps}\n    >\n      <div\n        className={classNames(\n          styles['CustomScrollView__box'],\n          enableHorizontalScroll && styles['CustomScrollView__box--horizontalEnabled'],\n          overscrollBehaviorClassNames[overscrollBehavior],\n        )}\n        tabIndex={-1}\n        ref={boxRef}\n        onScroll={onScroll}\n      >\n        <div ref={boxContentRef} className={styles['CustomScrollView__box-content']}>\n          {children}\n        </div>\n      </div>\n      <ScrollY\n        barHandlers={barYHandlers}\n        boxRef={boxRef}\n        autoHideScrollbar={autoHideScrollbar}\n        autoHideScrollbarDelay={autoHideScrollbarDelay}\n      />\n      {enableHorizontalScroll && (\n        <ScrollX\n          barHandlers={barXHandlers}\n          boxRef={boxRef}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n        />\n      )}\n    </div>\n  );\n};\n"],"names":["React","classNames","useAdaptivity","useExternRef","ScrollX","ScrollY","useCustomScrollViewResize","useDetectScrollDirection","styles","hasPointerClassName","hasPointer","undefined","overscrollBehaviorClassNames","auto","contain","none","CustomScrollView","className","children","boxRef","externalBoxRef","windowResize","autoHideScrollbar","autoHideScrollbarDelay","enableHorizontalScroll","onScroll","onScrollProp","getRootRef","overscrollBehavior","restProps","boxContentRef","useRef","detectScrollDirection","barYHandlers","barXHandlers","onResize","current","resize","event","scrollDirection","scroll","div","ref","tabIndex","barHandlers"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,YAAY,QAAQ,2BAA2B;AAExD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,OAAO,QAAQ,YAAY;AAEpC,SAASC,yBAAyB,QAAQ,8BAA8B;AACxE,SAASC,wBAAwB,QAAQ,6BAA6B;AAEtE,OAAOC,YAAY,gCAAgC;AAEnD,SAASC,oBAAoBC,UAA+B;IAC1D,OAAQA;QACN,KAAK;YACH,OAAOF,MAAM,CAAC,oCAAoC;QACpD,KAAK;YACH,OAAOA,MAAM,CAAC,qCAAqC;QACrD,KAAKG;QACL;YACE,OAAOH,MAAM,CAAC,oCAAoC;IACtD;AACF;AAEA,MAAMI,+BAA+B;IACnCC,MAAMF;IACNG,SAASN,MAAM,CAAC,oDAAoD;IACpEO,MAAMP,MAAM,CAAC,iDAAiD;AAChE;AAuBA;;CAEC,GACD,OAAO,MAAMQ,mBAAmB,CAAC,EAC/BC,SAAS,EACTC,QAAQ,EACRC,QAAQC,cAAc,EACtBC,YAAY,EACZC,oBAAoB,KAAK,EACzBC,sBAAsB,EACtBC,yBAAyB,KAAK,EAC9BC,UAAUC,YAAY,EACtBC,UAAU,EACVC,qBAAqB,MAAM,EAC3B,GAAGC,WACmB;IACtB,MAAM,EAAEnB,UAAU,EAAE,GAAGR;IAEvB,MAAMiB,SAAShB,aAAaiB;IAC5B,MAAMU,gBAAgB9B,MAAM+B,MAAM,CAAiB;IAEnD,MAAMC,wBAAwBzB;IAE9B,MAAM0B,eAAejC,MAAM+B,MAAM,CAAqB;IACtD,MAAMG,eAAelC,MAAM+B,MAAM,CAAqB;IAEtDzB,0BAA0B;QACxBe;QACAS;QACAK,UAAU;YACRF,aAAaG,OAAO,EAAEC;YACtBH,aAAaE,OAAO,EAAEC;QACxB;IACF;IAEA,MAAMZ,WAAW,CAACa;QAChB,MAAMC,kBAAkBP,sBAAsBM;QAC9C,OAAQC;YACN,KAAK;gBACHL,aAAaE,OAAO,EAAEI;gBACtB;YACF,KAAK;gBACHP,aAAaG,OAAO,EAAEI;gBACtB;QACJ;QACAd,eAAeY;IACjB;IAEA,qBACE,MAACG;QACCxB,WAAWhB,WAAWgB,WAAWT,MAAM,CAAC,mBAAmB,EAAEC,oBAAoBC;QACjFgC,KAAKf;QACJ,GAAGE,SAAS;;0BAEb,KAACY;gBACCxB,WAAWhB,WACTO,MAAM,CAAC,wBAAwB,EAC/BgB,0BAA0BhB,MAAM,CAAC,2CAA2C,EAC5EI,4BAA4B,CAACgB,mBAAmB;gBAElDe,UAAU,CAAC;gBACXD,KAAKvB;gBACLM,UAAUA;0BAEV,cAAA,KAACgB;oBAAIC,KAAKZ;oBAAeb,WAAWT,MAAM,CAAC,gCAAgC;8BACxEU;;;0BAGL,KAACb;gBACCuC,aAAaX;gBACbd,QAAQA;gBACRG,mBAAmBA;gBACnBC,wBAAwBA;;YAEzBC,wCACC,KAACpB;gBACCwC,aAAaV;gBACbf,QAAQA;gBACRG,mBAAmBA;gBACnBC,wBAAwBA;;;;AAKlC,EAAE"}