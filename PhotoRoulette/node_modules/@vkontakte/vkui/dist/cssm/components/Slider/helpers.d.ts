import type * as React from 'react';
import type { InternalDraggingType, InternalValueState } from './types';
export declare const toPercent: (v: number, min: number, max: number) => number;
export declare const offsetToValue: (startX: number, width: number, min: number, max: number, step?: number) => number;
export declare const updateInternalStateValue: (prevValue: InternalValueState, nextValue: number, min: number, max: number, dragging: InternalDraggingType | null) => InternalValueState;
export declare const updateInternalStateValueByNativeChange: (prevValue: InternalValueState, nextValue: number, dragging: InternalDraggingType | null) => InternalValueState;
export declare function isMultipleValues(value: InternalValueState): value is [number, number];
export declare const snapDirection: (prevValue: InternalValueState, nextValue: number, type: InternalDraggingType | null) => "start" | "end";
export declare const getDraggingTypeByTargetDataset: <T extends (EventTarget & HTMLElement) | null>(target: T) => "start" | "end" | null;
export declare const extractSliderAriaAttributesFromRestProps: <T extends React.AriaAttributes>(restProps: T) => T & {
    ariaLabel: string | undefined;
    ariaValueText: string | undefined;
    ariaLabelledBy: string | undefined;
};
//# sourceMappingURL=helpers.d.ts.map