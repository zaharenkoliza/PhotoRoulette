{"version":3,"sources":["../../src/hooks/useResizeObserver.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport type * as React from 'react';\nimport { CustomResizeObserver } from '../lib/floating/customResizeObserver';\nimport { useStableCallback } from './useStableCallback';\n\n/**\n * Хук вызывает переданный коллбэк при изменении размеров элемента.\n */\nexport function useResizeObserver(\n  ref: React.MutableRefObject<HTMLElement | null> | React.RefObject<HTMLElement | null> | null,\n  callback: (element: HTMLElement) => void,\n): void {\n  const stableCallback = useStableCallback(callback);\n\n  useEffect(\n    function addResizeObserverHandler() {\n      /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */\n      if (!ref || !ref.current) {\n        return;\n      }\n      const element = ref.current;\n      const observer = new CustomResizeObserver(() => stableCallback(element));\n      observer.observe(element);\n      observer.appendToTheDOM();\n\n      return () => observer.disconnect();\n    },\n    [ref, stableCallback],\n  );\n}\n"],"names":["useEffect","CustomResizeObserver","useStableCallback","useResizeObserver","ref","callback","stableCallback","addResizeObserverHandler","current","element","observer","observe","appendToTheDOM","disconnect"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAElC,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD;;CAEC,GACD,OAAO,SAASC,kBACdC,GAA4F,EAC5FC,QAAwC;IAExC,MAAMC,iBAAiBJ,kBAAkBG;IAEzCL,UACE,SAASO;QACP,6EAA6E,GAC7E,IAAI,CAACH,OAAO,CAACA,IAAII,OAAO,EAAE;YACxB;QACF;QACA,MAAMC,UAAUL,IAAII,OAAO;QAC3B,MAAME,WAAW,IAAIT,qBAAqB,IAAMK,eAAeG;QAC/DC,SAASC,OAAO,CAACF;QACjBC,SAASE,cAAc;QAEvB,OAAO,IAAMF,SAASG,UAAU;IAClC,GACA;QAACT;QAAKE;KAAe;AAEzB"}