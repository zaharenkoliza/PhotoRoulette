export class EventBus {
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    constructor() {
        this.subscriptions = {};
    }
    static getInstance() {
        if (!EventBus.instance) {
            EventBus.instance = new EventBus();
        }
        return EventBus.instance;
    }
    isEventExist(contextName) {
        return contextName in this.subscriptions;
    }
    static broadcast(contextName, args) {
        const eventBus = EventBus.getInstance();
        if (!eventBus.isEventExist(contextName)) {
            return;
        }
        eventBus.subscriptions[contextName].forEach((callback) => callback(...args));
    }
    static subscribe(contextName, callback) {
        const eventBus = EventBus.getInstance();
        if (!eventBus.isEventExist(contextName)) {
            eventBus.subscriptions[contextName] = new Set();
        }
        const callbacks = eventBus.subscriptions[contextName];
        callbacks.add(callback);
        return () => {
            callbacks.delete(callback);
            if (callbacks.size === 0) {
                delete eventBus.subscriptions[contextName];
            }
        };
    }
}
//# sourceMappingURL=EventBus.js.map