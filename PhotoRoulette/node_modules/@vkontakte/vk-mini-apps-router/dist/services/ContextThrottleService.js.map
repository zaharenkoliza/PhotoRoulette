{"version":3,"file":"ContextThrottleService.js","sourceRoot":"","sources":["../../src/services/ContextThrottleService.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventBus } from './EventBus';\nimport { TransactionExecutor } from './TransactionExecutor';\n\ninterface ContextThrottleInfo {\n  prevValue: unknown;\n  updateTimerId: number;\n  throttledValue: unknown;\n  lastUpdateTimestamp: number;\n}\n\ninterface ContextThrottleServiceSettings {\n  interval: number;\n  throttled: boolean;\n}\n\nexport class ContextThrottleService {\n  private static instance?: ContextThrottleService;\n  private interval = 0;\n  private throttled = true;\n  private contextThrottleMap: Record<string, ContextThrottleInfo> = {};\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public static getInstance() {\n    if (!ContextThrottleService.instance) {\n      ContextThrottleService.instance = new ContextThrottleService();\n    }\n\n    return ContextThrottleService.instance;\n  }\n\n  private getContextThrottleInfoByName(contextName: string) {\n    if (!(contextName in this.contextThrottleMap)) {\n      this.contextThrottleMap[contextName] = {\n        prevValue: null,\n        throttledValue: null,\n        lastUpdateTimestamp: 0,\n        updateTimerId: 0,\n      };\n    }\n    return this.contextThrottleMap[contextName];\n  }\n\n  private isContextChange<T>(contextName: string, newValue: T) {\n    const contextData = this.getContextThrottleInfoByName(contextName);\n    return !(newValue === contextData.throttledValue);\n  }\n\n  private getTimeUntilNextUpdate(lastUpdateTimestamp: number) {\n    const timeSinceLastUpdate = Date.now() - lastUpdateTimestamp;\n    const delayUntilNextUpdate = this.interval - timeSinceLastUpdate;\n    return delayUntilNextUpdate;\n  }\n\n  private updateContextValue<T>(contextName: string, newValue: T) {\n    const contextData = this.getContextThrottleInfoByName(contextName);\n    contextData.prevValue = contextData.throttledValue;\n    contextData.lastUpdateTimestamp = Date.now();\n    contextData.throttledValue = newValue;\n    EventBus.broadcast(contextName, [contextData.throttledValue, contextData.prevValue]);\n  }\n\n  private throttleUpdateContextValue<T>(contextName: string, newValue: T) {\n    const contextData = this.getContextThrottleInfoByName(contextName);\n    clearTimeout(contextData.updateTimerId);\n    if (this.isRunSyncActive()) return;\n\n    const lastUpdateTimestamp = contextData.lastUpdateTimestamp;\n    const timeUntilNextUpdate = this.getTimeUntilNextUpdate(lastUpdateTimestamp);\n\n    if (timeUntilNextUpdate <= 0) {\n      this.updateContextValue(contextName, newValue);\n    } else {\n      contextData.updateTimerId = setTimeout(() => {\n        this.updateContextValue(contextName, newValue);\n      }, timeUntilNextUpdate);\n    }\n  }\n\n  private isRunSyncActive() {\n    return TransactionExecutor.isRunSyncActive;\n  }\n\n  public static triggerContextUpdate<T>(contextName: string, newValue: T) {\n    const throttledService = ContextThrottleService.getInstance();\n\n    if (!throttledService.isContextChange(contextName, newValue)) {\n      return;\n    }\n\n    if (!throttledService.throttled && !throttledService.isRunSyncActive()) {\n      throttledService.updateContextValue(contextName, newValue);\n    } else {\n      throttledService.throttleUpdateContextValue(contextName, newValue);\n    }\n  }\n\n  public static updateThrottledServiceSettings(settings: ContextThrottleServiceSettings) {\n    const throttledService = ContextThrottleService.getInstance();\n    throttledService.interval = settings.interval;\n    throttledService.throttled = settings.throttled;\n  }\n}\n"]}