"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "formatDuration", {
    enumerable: true,
    get: function() {
        return formatDuration;
    }
});
var _numbers = require("../other/numbers");
/**
 * Форматирует длительность в секундах в строку вида "MM:SS" или "HH:MM:SS".
 * Если `forceHours` `true`, то всегда будет выводиться "HH:MM:SS", даже если
 * длительность меньше часа
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { formatDuration } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(
 *   formatDuration(123456),
 *   "34:17:36",
 * );
 *
 * assert.strictEqual(
 *   formatDuration(1234, true),
 *   "0:20:34",
 * );
 * ```
 *
 * @param durationInSeconds Количество секунд, которые требуется отформатировать
 * @param forceHours Если `true`, то всегда будет выводиться "HH:MM:SS" даже
 * если длительность меньше часа
 */ function formatDuration(durationInSeconds, forceHours) {
    if (!durationInSeconds) {
        durationInSeconds = 0;
    }
    durationInSeconds = Math.abs(durationInSeconds);
    var MINUTE = 60;
    var HOUR = 3600;
    var hours = Math.floor(durationInSeconds / HOUR);
    var minutes = Math.floor(durationInSeconds / MINUTE) % MINUTE;
    var seconds = durationInSeconds % MINUTE;
    if (durationInSeconds >= HOUR || forceHours) {
        return [
            hours,
            (0, _numbers.leadingZero)(minutes),
            (0, _numbers.leadingZero)(seconds)
        ].join(':');
    } else {
        return [
            minutes,
            (0, _numbers.leadingZero)(seconds)
        ].join(':');
    }
}

//# sourceMappingURL=duration.js.map